Script started on Sat 05 Mar 2022 02:14:24 PM PST
[?1034hbash-4.2$ exitvim main.cpp [C[C[C[C[C[C[C[C[C[Ckeyvalue test11.in test1.in[C[C[C[C[C[C[C[C[C[C[11@perl pkeyvalue.perl[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmake[K[K[K[K[Kvim ../SCORE
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"../SCORE" 159L, 5253C[>c[1;1H[38;5;130m 84 
 85 [m     In one xterm, edit the SCORE file so you can record things
[38;5;130m 86 [m     that happen.
[38;5;130m 87 
 88 [m     Instructions for copying in .score are a little different:
[38;5;130m 89 [m     cp -R .score/* .
[38;5;130m 90 [m     that way the two subdirectories local and remote are
[38;5;130m 91 [m     copied into the student's directory.
[38;5;130m 92 [m     For each test, keep a typescript of the testing.
[38;5;130m 93 
 94 [m     daemon:
[38;5;130m 95 [m     in the daemon, cd remote:
[38;5;130m 96 [m     which cxid
[38;5;130m 97 [m     script daemon.log1
[38;5;130m 98 [m     ../cxid 8888 (or whatever port works for you)
[38;5;130m 99 
100 [m     in the client xterm: cd local
[38;5;130m101 [m     script client.log
[38;5;130m102 [m     ../cxi localhost 8888
[38;5;130m103 
104 [m     That starts things, then move back and forth between each
[38;5;130m105 [m     of the clients watching the daemon chatter.
[38;5;130m106 [m     For the following, type in a command to see if it works.
[38;5;130m107 [m     the prefix tells you which client to test.
[38;5;130m108 
109 [m     Do not examine any files until you exit from script.
[38;5;130m110 [m     After exiting from script, answer the following questions.
[38;5;130m111 [m     This requires two passes by the grader.
[38;5;130m112 [15;10H[?12l[?25h[?25l[m[30;1H[K[30;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[30;1H[K[30;1H[?1l>[?12l[?25h[?1049lbash-4.2$ ../cxid 8888
cxid(17077): unix4.lt.ucsc.edu (128.114.104.57) accepting port 8888
exit
^C
bash-4.2$ ls
HEADER.html  RCS  daemon.log1  localfile  localtto
bash-4.2$ ls../cxid 8888
cxid(21379): unix4.lt.ucsc.edu (128.114.104.57) accepting port 8888
cxid(21379): accepted unix5.lt.ucsc.edu (128.114.104.100) port 49578
cxid(21379): forked cxiserver pid 22127
cxid(21379): unix4.lt.ucsc.edu (128.114.104.57) accepting port 8888
cxid*(22127): connected to unix5.lt.ucsc.edu (128.114.104.100) port 49578
cxid*(22127): unix5.lt.ucsc.edu (128.114.104.100) port 49578 is closed
cxid(21379): listener.accept caught Interrupted system call
^C
bash-4.2$ vim ../cix[K[Kxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"../cxid.cpp" 179L, 5033C[>c[1;1H[38;5;130m151 [m[15Clistener.accept (client_sock);
[38;5;130m152 [15Cbreak[m;
[38;5;130m153 [m[12C}[38;5;130mcatch[m (socket_sys_error& error) {
[38;5;130m154 [15Cswitch[m (error.sys_errno) {
[38;5;130m155 [18Ccase[m [31mEINTR[m:
[38;5;130m156 [m[21Coutlog << [31m"listener.accept caught "[m
[38;5;130m157 [m[25C<< strerror ([31mEINTR[m) << endl;
[38;5;130m158 [21Cbreak[m;
[38;5;130m159 [18Cdefault[m:
[38;5;130m160 [21Cthrow[m;
[38;5;130m161 [m[15C}
[38;5;130m162 [m[12C}
[38;5;130m163 [m[9C}
[38;5;130m164 [m[9Coutlog << [31m"accepted "[m << to_string (client_sock) << endl;
[38;5;130m165 [9Ctry[m {
[38;5;130m166 [m[12Cfork_cxiserver (listener, client_sock);
[38;5;130m167 [m[12Creap_zombies();
[38;5;130m168 [m[9C}[38;5;130mcatch[m (socket_error& error) {
[38;5;130m169 [m[12Coutlog << error.what() << endl;
[38;5;130m170 [m[9C}
[38;5;130m171 [m      }
[38;5;130m172 [m   }[38;5;130mcatch[m (socket_error& error) {
[38;5;130m173 [m      outlog << error.what() << endl;
[38;5;130m174 [m   }[38;5;130mcatch[m (cxi_exit& error) {
[38;5;130m175 [m      DEBUGF ([31m'x'[m, [31m"caught cxi_exit"[m);
[38;5;130m176 [m   }
[38;5;130m177 [m   [38;5;130mreturn[m [31m0[m;
[38;5;130m178 [m}
[38;5;130m179 [?12l[?25h[28;5H[27;5H[26;5H[25;5H[24;5H[23;5H[22;5H[21;5H[20;5H[19;5H[18;5H[17;5H[16;5H[15;5H[14;5H[13;5H[12;5H[11;5H[10;5H[9;5H[8;5H[7;5H[6;5H[5;5H[4;5H[3;5H[2;5H[1;5H[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m150 [12Ctry[m {[30;1H[K[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m149 [9Cfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m148 [m[9Caccepted_socket client_sock;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m147 [m[13C<< to_string (port) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m146 [m[9Coutlog << to_string (hostinfo()) << [31m" accepting port "[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m145 [m      [38;5;130mfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m144 [m      server_socket listener (port);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m143 [m      in_port_t port = scan_options (argc, argv);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m142 [m   [38;5;130mtry[m {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m141 [m   signal_action ([31mSIGCHLD[m, signal_handler);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m140 [m   outlog.execname (basename (argv[[31m0[m]));[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m139 [m[32mint[m main ([32mint[m argc, [32mchar[m** argv) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m138 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m137 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m136 [m   [38;5;130mreturn[m get_cxi_server_port (argv[optind]);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m135 [m   [38;5;130mif[m (argc - optind != [31m1[m) usage();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m134 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m133 [m      }[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m132 [19Cbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m131 [9Ccase[m [31m'@'[m: debugflags::setflags (optarg);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m130 [m      [38;5;130mswitch[m (opt) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m129 [m      [38;5;130mif[m (opt == [31mEOF[m) [38;5;130mbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m128 [m      [32mint[m opt = getopt (argc, argv, [31m"@:"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m127 [m   [38;5;130mfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m126 [min_port_t scan_options ([32mint[m argc, [32mchar[m** argv) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m125 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m124 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m123 [m   [38;5;130mthrow[m cxi_exit();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m122 [m   cerr << [31m"Usage: "[m << outlog.execname() << [31m" port"[m << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m121 [m[32mvoid[m usage() {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m120 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m119 [m[34m^L[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m118 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m117 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m116 [m[22C<< [31m" failed: "[m << strerror (errno) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m115 [m   [38;5;130mif[m (rc < [31m0[m) outlog << [31m"sigaction "[m << strsignal (signal)[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m114 [m   [32mint[m rc = sigaction (signal, &action, [31mnullptr[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m113 [m   action.sa_flags = [31m0[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m112 [m   sigfillset (&action.sa_mask);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m111 [m   action.sa_handler = handler;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m110 [m   [32mstruct[m sigaction action;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m109 [m[32mvoid[m signal_action ([32mint[m signal, [32mvoid[m (*handler) ([32mint[m)) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m108 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m107 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m106 [m   reap_zombies();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m105 [m   DEBUGF ([31m's'[m, [31m"signal_handler: caught "[m << strsignal (signal));[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m104 [m[32mvoid[m signal_handler ([32mint[m signal) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m103 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m102 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m101 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m100 [m      }[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 99 [m[16C<< [31m" core "[m << (status >> [31m7[m & [31m1[m) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 98 [m[16C<< [31m" signal "[m << (status & [31m0x7F[m)[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 97 [m[16C<< [31m" exit "[m << (status >> [31m8[m & [31m0xFF[m)[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 96 [m[9Coutlog << [31m"child "[m << child[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 95 [m      [38;5;130mif[m (status != [31m0[m) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 94 [m      [38;5;130mif[m (child <= [31m0[m) [38;5;130mbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 93 [m      pid_t child = waitpid (-[31m1[m, &status, WNOHANG);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 92 [m      [32mint[m status;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 91 [m   [38;5;130mfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 90 [m[32mvoid[m reap_zombies() {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 89 [m[34m^L[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 88 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 87 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 86 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 85 [m      }[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 84 [m[9Coutlog << [31m"forked cxiserver pid "[m << pid << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 83 [m      }[38;5;130melse[m {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 82 [m[9Coutlog << [31m"fork failed: "[m << strerror (errno) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 81 [m      [38;5;130mif[m (pid < [31m0[m) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 80 [m      accept.close();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 79 [m   }[38;5;130melse[m {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 78 [m      [38;5;130mthrow[m cxi_exit();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 77 [m      run_server (accept);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 76 [m      server.close();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 75 [m   [38;5;130mif[m (pid == [31m0[m) { [34m// child[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 74 [m   pid_t pid = fork();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 73 [m[32mvoid[m fork_cxiserver (server_socket& server, accepted_socket& accept) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 72 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 71 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 70 [m   [38;5;130mthrow[m cxi_exit();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 69 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 68 [m      DEBUGF ([31m'x'[m, [31m"caught cxi_exit"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 67 [m   }[38;5;130mcatch[m (cxi_exit& error) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 66 [m      outlog << error.what() << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 65 [m   }[38;5;130mcatch[m (socket_error& error) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 64 [m      }[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 63 [m[9C}[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 62 [15Cbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 61 [m[15Coutlog << [31m"invalid client header:"[m << header << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 60 [12Cdefault[m:[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 59 [15Cbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 58 [m[15Creply_ls (client_sock, header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 57 [12Ccase[m cxi_command::LS:[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 56 [9Cswitch[m (header.command) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 55 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 54 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 53 [m[9Ccxi_header header;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 52 [m      [38;5;130mfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 51 [m   [38;5;130mtry[m {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 50 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 49 [m   outlog.execname (outlog.execname() + [31m"*"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 48 [m[32mvoid[m run_server (accepted_socket& client_sock) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 47 [m[34m^L[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 45 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 38 [m   header.command = cxi_command::LSOUT;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 37 [m   pclose (ls_pipe);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 36 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 35 [m      ls_output.append (buffer);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 34 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 33 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 32 [m   [38;5;130mfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 31 [m   [32mchar[m buffer[[31m0x1000[m];[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 30 [m   string ls_output;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 29 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 28 [m      [38;5;130mreturn[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 27 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 26 [m      header.nbytes = htonl (errno);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 25 [m      header.command = cxi_command::NAK;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 24 [m      outlog << ls_cmd << [31m": "[m << strerror (errno) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 23 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 22 [m   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 21 [m   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 20 [m[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 19 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 18 [m[32mstruct[m cxi_exit: [38;5;130mpublic[m exception {};[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 17 [mlogstream outlog (cout);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 16 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 15 [m[35m#include [m[31m"socket.h"[1;5H[?12l[?25h[2;5H[3;5H[4;5H[5;5H[6;5H[7;5H[8;5H[9;5H[10;5H[11;5H[12;5H[13;5H[14;5H[15;5H[16;5H[17;5H[18;5H[19;5H[20;5H[21;5H[22;5H[23;5H[24;5H[25;5H[26;5H[27;5H[28;5H[29;5H[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[4;70H[106m{[m[29;1H[38;5;130m 45 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[3;70H{[28;5H}
[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 47 [m[34m^L[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 48 [m[32mvoid[m run_server (accepted_socket& client_sock) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 49 [m   outlog.execname (outlog.execname() + [31m"*"[m);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 50 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 51 [m   [38;5;130mtry[m {[29;5H[?12l[?25h[28;5H[27;5H[26;5H[25;5H[24;5H[23;5H[22;5H[21;5H[20;5H[19;5H[18;5H[17;5H[16;5H[15;5H[14;5H[13;5H[12;5H[11;5H[10;5H[9;5H[8;5H[7;5H[6;5H[5;5H[4;5H[3;5H[2;5H[1;5H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 22 [m   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 21 [m   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 20 [m[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 19 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 18 [m[32mstruct[m cxi_exit: [38;5;130mpublic[m exception {};[1;5H[?12l[?25h[2;5H[3;5H[?25l[30;1H[1m-- VISUAL --[3;5H[?12l[?25h[?25l[m[32m[47mvoid[m[47m reply_ls (accepted_socket& client_sock, cxi_header& header) { [4;5H[?12l[?25h[?25l   [m[32m[47mstatic[m[47m [m[32m[47mconst[m[47m [m[32m[47mchar[m[47m ls_cmd[] = [m[31m[47m"ls -l 2>&1"[m[47m; [5;5H[?12l[?25h[?25l   [m[32m[47mFILE[m[47m* ls_pipe = popen (ls_cmd, [m[31m[47m"r"[m[47m); [6;5H[?12l[?25h[?25l   [m[38;5;130m[47mif[m[47m (ls_pipe == [m[31m[47mnullptr[m[47m) {  [7;5H[?12l[?25h[?25l      outlog << ls_cmd << [m[31m[47m": "[m[47m << strerror (errno) << endl; [8;5H[?12l[?25h[?25l      header.command = cxi_command::NAK; [9;5H[?12l[?25h[?25l      header.nbytes = htonl (errno); [10;5H[?12l[?25h[?25l      send_packet (client_sock, &header, [m[38;5;130m[47msizeof[m[47m header); [11;5H[?12l[?25h[?25l      [m[38;5;130m[47mreturn[m[47m; [12;5H[?12l[?25h[?25l   } [13;5H[?12l[?25h[?25l   string ls_output; [14;5H[?12l[?25h[?25l   [m[32m[47mchar[m[47m buffer[[m[31m[47m0x1000[m[47m]; [15;5H[?12l[?25h[?25l   [m[38;5;130m[47mfor[m[47m (;;) { [16;5H[?12l[?25h[?25l      [m[32m[47mchar[m[47m* rc = fgets (buffer, [m[38;5;130m[47msizeof[m[47m buffer, ls_pipe); [17;5H[?12l[?25h[?25l      [m[38;5;130m[47mif[m[47m (rc == [m[31m[47mnullptr[m[47m) [m[38;5;130m[47mbreak[m[47m; [18;5H[?12l[?25h[?25l      ls_output.append (buffer); [19;5H[?12l[?25h[?25l   } [20;5H[?12l[?25h[?25l   pclose (ls_pipe); [21;5H[?12l[?25h[?25l   header.command = cxi_command::LSOUT; [22;5H[?12l[?25h[?25l   header.nbytes = htonl (ls_output.size()); [23;5H[?12l[?25h[?25l   memset (header.filename, [m[31m[47m0[m[47m, FILENAME_SIZE); [24;5H[?12l[?25h[?25l   DEBUGF ([m[31m[47m'h'[m[47m, [m[31m[47m"sending header "[m[47m << header); [25;5H[?12l[?25h[?25l   send_packet (client_sock, &header, [m[38;5;130m[47msizeof[m[47m header); [26;5H[?12l[?25h[?25l   send_packet (client_sock, ls_output.c_str(), ls_output.size()); [27;5H[?12l[?25h[?25l   DEBUGF ([m[31m[47m'h'[m[47m, [m[31m[47m"sent "[m[47m << ls_output.size() << [m[31m[47m" bytes"[m[47m); [m[28;5H[106m}[?12l[?25h[?25l[m[3;5H[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) [106m{[m[3;71H[K[4;5H   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;[4;50H[K[5;5H   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[5;44H[K[6;5H   [38;5;130mif[m (ls_pipe == [31mnullptr[m) { [6;34H[K[7;5H      outlog << ls_cmd << [31m": "[m << strerror (errno) << endl;[7;64H[K[8;5H      header.command = cxi_command::NAK;[8;45H[K[9;5H      header.nbytes = htonl (errno);[9;41H[K[10;5H      send_packet (client_sock, &header, [38;5;130msizeof[m header);[10;61H[K[11;5H      [38;5;130mreturn[m;[11;18H[K[12;5H   }[12;9H[K[13;5H   string ls_output;[13;25H[K[14;5H   [32mchar[m buffer[[31m0x1000[m];[14;28H[K[15;5H   [38;5;130mfor[m (;;) {[15;18H[K[16;5H      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[16;61H[K[17;5H      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[17;36H[K[18;5H      ls_output.append (buffer);[18;37H[K[19;5H   }[19;9H[K[20;5H   pclose (ls_pipe);[20;25H[K[21;5H   header.command = cxi_command::LSOUT;[21;44H[K[22;5H   header.nbytes = htonl (ls_output.size());[22;49H[K[23;5H   memset (header.filename, [31m0[m, FILENAME_SIZE);[23;51H[K[24;5H   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[24;50H[K[25;5H   send_packet (client_sock, &header, [38;5;130msizeof[m header);[25;58H[K[26;5H   send_packet (client_sock, ls_output.c_str(), ls_output.size());[26;71H[K[27;5H   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[27;62H[K[30;1H[K[30;1H26 lines yanked[3;70H{[28;5H}[3;5H[?12l[?25h[4;5H[5;5H[6;5H[7;5H[8;5H[9;5H[10;5H[11;5H[12;5H[13;5H[14;5H[15;5H[16;5H[17;5H[18;5H[19;5H[20;5H[21;5H[22;5H[23;5H[24;5H[25;5H[26;5H[27;5H[?25l[3;70H[106m{[28;5H}[?12l[?25h[?25l[m[3;70H{[28;5H}[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 47 [m[34m^L[m[30;1H[K[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 48 [m[32mvoid[m run_server (accepted_socket& client_sock) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 49 [m   outlog.execname (outlog.execname() + [31m"*"[m);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 50 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 51 [m   [38;5;130mtry[m {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 52 [m      [38;5;130mfor[m (;;) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 53 [m[9Ccxi_header header;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 54 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 55 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 56 [9Cswitch[m (header.command) {[29;5H[?12l[?25h[28;5H[27;5H[26;5H[25;5H[24;5H[23;5H[22;5H[21;5H[20;5H[?25l[30;1H[1m-- INSERT (paste) --[20;5H[?12l[?25h[2C[?25l[m[20;5H[K[20;5H[?12l[?25h[?25l[32mvoid[m run_server (accepted_socket& client_sock) {[21;5H   outlog.execname (outlog.execname() + [31m"*"[m);[21;50H[K[22;14H << [31m"connected to "[m << to_string (client_sock) << endl;[23;8H[38;5;130mtry[m {   [23;16H[K[24;8H   [38;5;130mfor[m (;;) {[25;11H   cxi_header header;[26;14Hrecv_packet (client_sock, &header, [38;5;130msizeof[m header);[27;14HDEBUGF ([31m'h'[m, [31m"received header "[m << header);[27;57H[K[28;14H[38;5;130mswitch[m (header.command) {[28;39H[K[29;14H   [38;5;130mcase[m cxi_command::LS: [19;5H[?12l[?25h[?25l[20;5H[K[21;5H[32mvoid[m run_server (accepted_socket& client_sock) {[22;14H.execname (outlog.execname() + [31m"*"[m);[22;50H[K[23;8Houtlog << [31m"connected to "[m << to_string (client_sock) << endl;[24;8H[38;5;130mtry[m {   [24;16H[K[25;11H[38;5;130mfor[m (;;) {[25;21H[K[26;14Hcxi_header header; [26;33H[K[27;14Hrecv_packet (client_sock, &header, [38;5;130msizeof[m header);[28;14HDEBUGF ([31m'h'[m, [31m"received header "[m << header);[29;14H[38;5;130mswitch[m (header.command) {[20;5H[?12l[?25h[?25l[21;5H[K[22;5H[32mvoid[m run_server (accepted_socket& client_sock) {[23;14H.execname (outlog.execname() + [31m"*"[m);[23;50H[K[24;8Houtlog << [31m"connected to "[m << to_string (client_sock) << endl;[25;8H[38;5;130mtry[m {   [25;16H[K[26;11H[38;5;130mfor[m (;;) {[26;21H[K[27;14Hcxi_header header; [27;33H[K[28;14Hrecv_packet (client_sock, &header, [38;5;130msizeof[m header);[29;14HDEBUGF ([31m'h'[m, [31m"received header "[m << header);[21;5H[?12l[?25h[20;5H[30;1H[K[20;5H[?25l[?12l[?25h[?25l[30;1H25 more lines[20;5H[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {[21;8H[32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;[22;5H   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[22;44H[K[23;8H[38;5;130mif[m (ls_pipe == [31mnullptr[m) { [23;34H[K[24;8H   outlog << ls_cmd << [31m": "[m << strerror (errno) << endl;[24;64H[K[25;8H   header.command = cxi_command::NAK;[26;11Hheader.nbytes = htonl (errno);[27;11Hsend_packet (client_sock, &header, [38;5;130msizeof[m header);[28;11H[38;5;130mreturn[m;[28;18H[K[29;8H}[29;14H[K[20;5H[?12l[?25h[21;5H[22;5H[23;5H[24;5H[25;5H[26;5H[27;5H[28;5H[29;5H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 57 [m   string ls_output;[30;1H[K[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 58 [m   [32mchar[m buffer[[31m0x1000[m];[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 59 [m   [38;5;130mfor[m (;;) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 60 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 61 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 62 [m      ls_output.append (buffer);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 63 [m   }[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 64 [m   pclose (ls_pipe);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 65 [m   header.command = cxi_command::LSOUT;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 66 [m   header.nbytes = htonl (ls_output.size());[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 67 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 68 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 69 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 70 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 71 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[4;70H[106m{[m[29;1H[38;5;130m 72 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[3;70H{[28;5H}
[38;5;130m 73 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 74 [m[32mvoid[m run_server (accepted_socket& client_sock) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 75 [m   outlog.execname (outlog.execname() + [31m"*"[m);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 76 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 77 [m   [38;5;130mtry[m {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 78 [m      [38;5;130mfor[m (;;) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 79 [m[9Ccxi_header header;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 80 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 81 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 82 [9Cswitch[m (header.command) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 83 [12Ccase[m cxi_command::LS:[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 84 [m[15Creply_ls (client_sock, header);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 85 [15Cbreak[m;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 86 [12Cdefault[m:[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 87 [m[15Coutlog << [31m"invalid client header:"[m << header << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 88 [15Cbreak[m;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 89 [m[9C}[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 90 [m      }[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 91 [m   }[38;5;130mcatch[m (socket_error& error) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 92 [m      outlog << error.what() << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 93 [m   }[38;5;130mcatch[m (cxi_exit& error) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 94 [m      DEBUGF ([31m'x'[m, [31m"caught cxi_exit"[m);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 95 [m   }[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 96 [m   [38;5;130mthrow[m cxi_exit();[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[6;52H[106m{[m[29;1H[38;5;130m 97 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[5;52H{[28;5H}
[38;5;130m 98 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 99 [m[32mvoid[m fork_cxiserver (server_socket& server, accepted_socket& accept) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m100 [m   pid_t pid = fork();[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m101 [m   [38;5;130mif[m (pid == [31m0[m) { [34m// child[29;5H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m102 [m      server.close();[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m103 [m      run_server (accept);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m104 [m      [38;5;130mthrow[m cxi_exit();[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m105 [m   }[38;5;130melse[m {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m106 [m      accept.close();[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m107 [m      [38;5;130mif[m (pid < [31m0[m) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m108 [m[9Coutlog << [31m"fork failed: "[m << strerror (errno) << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m109 [m      }[38;5;130melse[m {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m110 [m[9Coutlog << [31m"forked cxiserver pid "[m << pid << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m111 [m      }[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m112 [m   }[?12l[?25h[?25l[1;29r[29;1H
[1;30r[15;74H[106m{[m[29;1H[38;5;130m113 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[14;74H{[28;5H}
[38;5;130m114 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m115 [m[34m^L[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m116 [m[32mvoid[m reap_zombies() {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m117 [m   [38;5;130mfor[m (;;) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m118 [m      [32mint[m status;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m119 [m      pid_t child = waitpid (-[31m1[m, &status, WNOHANG);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m120 [m      [38;5;130mif[m (child <= [31m0[m) [38;5;130mbreak[m;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m121 [m      [38;5;130mif[m (status != [31m0[m) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m122 [m[9Coutlog << [31m"child "[m << child[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m123 [m[16C<< [31m" exit "[m << (status >> [31m8[m & [31m0xFF[m)[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m124 [m[16C<< [31m" signal "[m << (status & [31m0x7F[m)[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m125 [m[16C<< [31m" core "[m << (status >> [31m7[m & [31m1[m) << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m126 [m      }[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m127 [m   }[?12l[?25h[?25l[1;29r[29;1H
[1;30r[17;25H[106m{[m[29;1H[38;5;130m128 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[16;25H{[28;5H}
[38;5;130m129 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m130 [m[32mvoid[m signal_handler ([32mint[m signal) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m131 [m   DEBUGF ([31m's'[m, [31m"signal_handler: caught "[m << strsignal (signal));[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m132 [m   reap_zombies();[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[26;38H[106m{[m


[38;5;130m133 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[25;38H{[28;5H}
[38;5;130m134 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m135 [m[32mvoid[m signal_action ([32mint[m signal, [32mvoid[m (*handler) ([32mint[m)) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m136 [m   [32mstruct[m sigaction action;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m137 [m   action.sa_handler = handler;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m138 [m   sigfillset (&action.sa_mask);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m139 [m   action.sa_flags = [31m0[m;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m140 [m   [32mint[m rc = sigaction (signal, &action, [31mnullptr[m);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m141 [m   [38;5;130mif[m (rc < [31m0[m) outlog << [31m"sigaction "[m << strsignal (signal)[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m142 [m[22C<< [31m" failed: "[m << strerror (errno) << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[21;60H[106m{[m[29;1H[38;5;130m143 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[20;60H{[28;5H}
[38;5;130m144 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m145 [m[34m^L[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m146 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m147 [m[32mvoid[m usage() {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m148 [m   cerr << [31m"Usage: "[m << outlog.execname() << [31m" port"[m << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m149 [m   [38;5;130mthrow[m cxi_exit();[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[26;18H[106m{[m


[38;5;130m150 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[25;18H{[28;5H}
[38;5;130m151 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m152 [min_port_t scan_options ([32mint[m argc, [32mchar[m** argv) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m153 [m   [38;5;130mfor[m (;;) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m154 [m      [32mint[m opt = getopt (argc, argv, [31m"@:"[m);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m155 [m      [38;5;130mif[m (opt == [31mEOF[m) [38;5;130mbreak[m;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m156 [m      [38;5;130mswitch[m (opt) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m157 [9Ccase[m [31m'@'[m: debugflags::setflags (optarg);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m158 [19Cbreak[m;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m159 [m      }[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m160 [m   }[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m161 [m   [38;5;130mif[m (argc - optind != [31m1[m) usage();[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m162 [m   [38;5;130mreturn[m get_cxi_server_port (argv[optind]);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[18;52H[106m{[m[29;1H[38;5;130m163 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[17;52H{[28;5H}
[38;5;130m164 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m165 [m[32mint[m main ([32mint[m argc, [32mchar[m** argv) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m166 [m   outlog.execname (basename (argv[[31m0[m]));[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m167 [m   signal_action ([31mSIGCHLD[m, signal_handler);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m168 [m   [38;5;130mtry[m {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m169 [m      in_port_t port = scan_options (argc, argv);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m170 [m      server_socket listener (port);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m171 [m      [38;5;130mfor[m (;;) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m172 [m[9Coutlog << to_string (hostinfo()) << [31m" accepting port "[29;5H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m173 [m[13C<< to_string (port) << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m174 [m[9Caccepted_socket client_sock;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m175 [9Cfor[m (;;) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m176 [12Ctry[m {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m177 [m[15Clistener.accept (client_sock);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m178 [15Cbreak[m;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m179 [m[12C}[38;5;130mcatch[m (socket_sys_error& error) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m180 [15Cswitch[m (error.sys_errno) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m181 [18Ccase[m [31mEINTR[m:[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m182 [m[21Coutlog << [31m"listener.accept caught "[29;5H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m183 [m[25C<< strerror ([31mEINTR[m) << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m184 [21Cbreak[m;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m185 [18Cdefault[m:[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m186 [21Cthrow[m;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m187 [m[15C}[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m188 [m[12C}[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m189 [m[9C}[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m190 [m[9Coutlog << [31m"accepted "[m << to_string (client_sock) << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m191 [9Ctry[m {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m192 [m[12Cfork_cxiserver (listener, client_sock);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m193 [m[12Creap_zombies();[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m194 [m[9C}[38;5;130mcatch[m (socket_error& error) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m195 [m[12Coutlog << error.what() << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m196 [m[9C}[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m197 [m      }[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m198 [m   }[38;5;130mcatch[m (socket_error& error) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m199 [m      outlog << error.what() << endl;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m200 [m   }[38;5;130mcatch[m (cxi_exit& error) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m201 [m      DEBUGF ([31m'x'[m, [31m"caught cxi_exit"[m);[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m202 [m   }[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m203 [m   [38;5;130mreturn[m [31m0[m;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m204 [m}[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m205 [?12l[?25h[28;5H[27;5H[26;5H[25;5H[24;5H[23;5H[22;5H[21;5H[20;5H[19;5H[18;5H[17;5H[16;5H[15;5H[14;5H[13;5H[12;5H[11;5H[10;5H[9;5H[8;5H[7;5H[6;5H[5;5H[4;5H[3;5H[2;5H[1;5H[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m176 [12Ctry[m {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m175 [9Cfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m174 [m[9Caccepted_socket client_sock;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m173 [m[13C<< to_string (port) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m172 [m[9Coutlog << to_string (hostinfo()) << [31m" accepting port "[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m171 [m      [38;5;130mfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m170 [m      server_socket listener (port);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m169 [m      in_port_t port = scan_options (argc, argv);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m168 [m   [38;5;130mtry[m {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m167 [m   signal_action ([31mSIGCHLD[m, signal_handler);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m166 [m   outlog.execname (basename (argv[[31m0[m]));[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m165 [m[32mint[m main ([32mint[m argc, [32mchar[m** argv) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m164 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m163 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m162 [m   [38;5;130mreturn[m get_cxi_server_port (argv[optind]);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m161 [m   [38;5;130mif[m (argc - optind != [31m1[m) usage();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m160 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m159 [m      }[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m158 [19Cbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m157 [9Ccase[m [31m'@'[m: debugflags::setflags (optarg);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m156 [m      [38;5;130mswitch[m (opt) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m155 [m      [38;5;130mif[m (opt == [31mEOF[m) [38;5;130mbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m154 [m      [32mint[m opt = getopt (argc, argv, [31m"@:"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m153 [m   [38;5;130mfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m152 [min_port_t scan_options ([32mint[m argc, [32mchar[m** argv) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m151 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m150 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m149 [m   [38;5;130mthrow[m cxi_exit();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m148 [m   cerr << [31m"Usage: "[m << outlog.execname() << [31m" port"[m << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m147 [m[32mvoid[m usage() {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m146 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m145 [m[34m^L[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m144 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m143 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m142 [m[22C<< [31m" failed: "[m << strerror (errno) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m141 [m   [38;5;130mif[m (rc < [31m0[m) outlog << [31m"sigaction "[m << strsignal (signal)[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m140 [m   [32mint[m rc = sigaction (signal, &action, [31mnullptr[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m139 [m   action.sa_flags = [31m0[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m138 [m   sigfillset (&action.sa_mask);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m137 [m   action.sa_handler = handler;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m136 [m   [32mstruct[m sigaction action;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m135 [m[32mvoid[m signal_action ([32mint[m signal, [32mvoid[m (*handler) ([32mint[m)) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m134 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m133 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m132 [m   reap_zombies();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m131 [m   DEBUGF ([31m's'[m, [31m"signal_handler: caught "[m << strsignal (signal));[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m130 [m[32mvoid[m signal_handler ([32mint[m signal) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m129 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m128 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m127 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m126 [m      }[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m125 [m[16C<< [31m" core "[m << (status >> [31m7[m & [31m1[m) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m124 [m[16C<< [31m" signal "[m << (status & [31m0x7F[m)[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m123 [m[16C<< [31m" exit "[m << (status >> [31m8[m & [31m0xFF[m)[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m122 [m[9Coutlog << [31m"child "[m << child[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m121 [m      [38;5;130mif[m (status != [31m0[m) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m120 [m      [38;5;130mif[m (child <= [31m0[m) [38;5;130mbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m119 [m      pid_t child = waitpid (-[31m1[m, &status, WNOHANG);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m118 [m      [32mint[m status;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m117 [m   [38;5;130mfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m116 [m[32mvoid[m reap_zombies() {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m115 [m[34m^L[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m114 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m113 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m112 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m111 [m      }[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m110 [m[9Coutlog << [31m"forked cxiserver pid "[m << pid << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m109 [m      }[38;5;130melse[m {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m108 [m[9Coutlog << [31m"fork failed: "[m << strerror (errno) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m107 [m      [38;5;130mif[m (pid < [31m0[m) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m106 [m      accept.close();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m105 [m   }[38;5;130melse[m {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m104 [m      [38;5;130mthrow[m cxi_exit();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m103 [m      run_server (accept);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m102 [m      server.close();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m101 [m   [38;5;130mif[m (pid == [31m0[m) { [34m// child[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m100 [m   pid_t pid = fork();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 99 [m[32mvoid[m fork_cxiserver (server_socket& server, accepted_socket& accept) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 98 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 97 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 96 [m   [38;5;130mthrow[m cxi_exit();[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 95 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 94 [m      DEBUGF ([31m'x'[m, [31m"caught cxi_exit"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 93 [m   }[38;5;130mcatch[m (cxi_exit& error) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 92 [m      outlog << error.what() << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 91 [m   }[38;5;130mcatch[m (socket_error& error) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 90 [m      }[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 89 [m[9C}[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 88 [15Cbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 87 [m[15Coutlog << [31m"invalid client header:"[m << header << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 86 [12Cdefault[m:[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 85 [15Cbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 84 [m[15Creply_ls (client_sock, header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 83 [12Ccase[m cxi_command::LS:[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 82 [9Cswitch[m (header.command) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 81 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 80 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 79 [m[9Ccxi_header header;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 78 [m      [38;5;130mfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 77 [m   [38;5;130mtry[m {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 76 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 75 [m   outlog.execname (outlog.execname() + [31m"*"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 74 [m[32mvoid[m run_server (accepted_socket& client_sock) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 73 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 72 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 71 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 70 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 69 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 68 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 67 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 66 [m   header.nbytes = htonl (ls_output.size());[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 65 [m   header.command = cxi_command::LSOUT;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 64 [m   pclose (ls_pipe);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 63 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 62 [m      ls_output.append (buffer);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 61 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 60 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 59 [m   [38;5;130mfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 58 [m   [32mchar[m buffer[[31m0x1000[m];[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 57 [m   string ls_output;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 56 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 55 [m      [38;5;130mreturn[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 54 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 53 [m      header.nbytes = htonl (errno);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 52 [m      header.command = cxi_command::NAK;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 51 [m      outlog << ls_cmd << [31m": "[m << strerror (errno) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 50 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 49 [m   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 48 [m   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 47 [m[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 45 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 38 [m   header.command = cxi_command::LSOUT;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 37 [m   pclose (ls_pipe);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 36 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 35 [m      ls_output.append (buffer);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 34 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 33 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 32 [m   [38;5;130mfor[m (;;) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 31 [m   [32mchar[m buffer[[31m0x1000[m];[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 30 [m   string ls_output;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 29 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 28 [m      [38;5;130mreturn[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 27 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 26 [m      header.nbytes = htonl (errno);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 25 [m      header.command = cxi_command::NAK;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 24 [m      outlog << ls_cmd << [31m": "[m << strerror (errno) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 23 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 22 [m   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 21 [m   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 20 [m[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 19 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 18 [m[32mstruct[m cxi_exit: [38;5;130mpublic[m exception {};[1;5H[?12l[?25h[?25l[30;1H:[?12l[?25h [1;5H[?25l[30;1H/[?12l[?25hr[?25l[?12l[?25he[?25l[?12l[?25hp[?25l[?12l[?25hl[?25l[?12l[?25hy[?25l[?12l[?25h_[?25l[?12l[?25hl[?25l[?12l[?25hs[?25l[?12l[?25h[?25l[3;10H[103mreply_ls[3;10H[?12l[?25h[4;8H[?25l[30;1H[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 47 [m[32mvoid[m [103mreply_ls[m (accepted_socket& client_sock, cxi_header& header) {[30;1H[K[29;10H[?12l[?25h[?25l
/reply_ls[27m[m[H[2J[1;1H[38;5;130m 70 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 71 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 72 [m}
[38;5;130m 73 
 74 [m[32mvoid[m run_server (accepted_socket& client_sock) {
[38;5;130m 75 [m   outlog.execname (outlog.execname() + [31m"*"[m);
[38;5;130m 76 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;
[38;5;130m 77 [m   [38;5;130mtry[m {
[38;5;130m 78 [m      [38;5;130mfor[m (;;) {
[38;5;130m 79 [m[9Ccxi_header header;
[38;5;130m 80 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 81 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);
[38;5;130m 82 [9Cswitch[m (header.command) {
[38;5;130m 83 [12Ccase[m cxi_command::LS:
[38;5;130m 84 [m[15C[103mreply_ls[m (client_sock, header);
[38;5;130m 85 [15Cbreak[m;
[38;5;130m 86 [12Cdefault[m:
[38;5;130m 87 [m[15Coutlog << [31m"invalid client header:"[m << header << endl;
[38;5;130m 88 [15Cbreak[m;
[38;5;130m 89 [m[9C}
[38;5;130m 90 [m      }
[38;5;130m 91 [m   }[38;5;130mcatch[m (socket_error& error) {
[38;5;130m 92 [m      outlog << error.what() << endl;
[38;5;130m 93 [m   }[38;5;130mcatch[m (cxi_exit& error) {
[38;5;130m 94 [m      DEBUGF ([31m'x'[m, [31m"caught cxi_exit"[m);
[38;5;130m 95 [m   }
[38;5;130m 96 [m   [38;5;130mthrow[m cxi_exit();
[38;5;130m 97 [m}
[38;5;130m 98 [15;20H[?12l[?25h[?25l[30;1H[m:[?12l[?25hn[?25l[?12l[?25ho[?25l[?12l[?25hh[?25l[?12l[?25h[?25l[15;20Hreply_ls[15;20H[?12l[?25h[14;20H[?25l[30;1H[1m-- VISUAL --[14;17H[?12l[?25h[?25l[m[38;5;130m[47mcase[m[47m cxi_command::LS:  [15;5H            [?12l[?25h[?25l   reply_ls (client_sock, header); [16;5H            [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l[m[38;5;130m[47mb[?12l[?25h[?25lr[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25lk[?12l[?25h[?25l[m[47m;[?12l[?25h[?25l[m[14;17H[38;5;130mcase[m cxi_command::LS: [14;39H[K[15;5H               reply_ls (client_sock, header);[15;51H[K[16;5H               [38;5;130mbreak[m;[30;1H[K[30;1H4 lines yanked[14;17H[?12l[?25h[?25l[30;1H3 more lines[30;13H[K[17;5H[38;5;130mcase[m cxi_command::LS:[18;20Hreply_ls (client_sock, header);[18;51H[K[20;14H   [38;5;130mdefault[m:[21;11H [8Coutlog << [31m"invalid client header:"[m << header << endl;[22;8H            [38;5;130mbreak[m;[22;26H[K[23;11H   }[23;15H[K[24;8H   }[24;12H[K[25;8H}[38;5;130mcatch[m (socket_error& error) {[25;38H[K[26;8H   outlog << error.what() << endl;[27;8H}[38;5;130mcatch[m (cxi_exit& error) {[28;5H      DEBUGF ([31m'x'[m, [31m"caught cxi_exit"[m);[29;8H}[14;17H[?12l[?25h[13;17H[12;17H[13;17H[14;17H[15;17H[16;17H[17;17H[?25l[30;1H[1m-- INSERT (paste) --[17;6H[?12l[?25h[?25l[m [38;5;130mcase[m cxi_command::LS:[17;6H[?12l[?25h[?25l [38;5;130mcase[m cxi_command::LS:[17;7H[?12l[?25h[?25l [38;5;130mcase[m cxi_command::LS:[17;8H[?12l[?25h[?25l [38;5;130mcase[m cxi_command::LS:[17;9H[?12l[?25h[?25l [38;5;130mcase[m cxi_command::LS:[17;10H[?12l[?25h[?25l  [38;5;130mcase[m cxi_command::LS:[17;12H[?12l[?25h[?25l [38;5;130mcase[m cxi_command::LS:[17;13H[?12l[?25h[?25l [38;5;130mcase[m cxi_command::LS:[17;14H[?12l[?25h[?25l [38;5;130mcase[m cxi_command::LS:[17;15H[?12l[?25h[?25l [38;5;130mcase[m cxi_command::LS:[17;16H[?12l[?25h[?25l [38;5;130mcase[m cxi_command::LS:[17;17H[?12l[?25h[1C[1C[3Ccxi_command::LS[?25l: [?12l[?25h[?25l: [?12l[?25h[?25lR:[?12l[?25h[?25lM:[?12l[?25h[30;1H[K[17;36H[?25l[?12l[?25h[18;36H[?25l[106m([19C)[18;29H[?12l[?25h[?25l[m([19C)[18;28H[?12l[?25h[?25l[30;1H[1m-- INSERT (paste) --[18;28H[?12l[?25h[?25l[m (client_sock, header);[18;50H[K[18;27H[?12l[?25h[?25l (client_sock, header);[18;49H[K[18;26H[?12l[?25h[?25lr (client_sock, header);[18;27H[?12l[?25h[?25lm (client_sock, header);[18;28H[?12l[?25h[?25l [106m([19C)[18;29H[?12l[?25h[?25l[m([19C)[18;31H[?12l[?25hlient_sock,[30;1H[K[18;41H[?25l[?12l[?25h[19;25H[18;41H[17;38H[16;25H[15;41H[14;38H[?25l[13;38H[106m{[23;14H}[13;38H[?12l[?25h[?25l[m{[23;14H}[12;41H[?12l[?25h[11;41H[10;32H[?25l[9;20H[106m{[24;11H}[9;20H[?12l[?25h[?25l[m{[24;11H}[8;15H[?12l[?25h[7;41H[?25l[6;40H[106m()[?12l[?25h[?25l[m()[5;41H[?12l[?25h[4;5H[3;5H[2;41H[1;41H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 69 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 68 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 67 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 66 [m   header.nbytes = htonl (ls_output.size());[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 65 [m   header.command = cxi_command::LSOUT;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 64 [m   pclose (ls_pipe);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 63 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 62 [m      ls_output.append (buffer);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 61 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 60 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[1;41H[?12l[?25h[?25l[5;29r[5;1H[L[1;30r[1;2H[38;5;130m59 [m   [38;5;130mfor[m (;;) [106m{[m[1;18H[K[2;3H[38;5;130m0[m[7C[32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[3;3H[38;5;130m1[7Cif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[3;36H[K[4;3H[38;5;130m2[m[4C   ls_output.append (buffer);
[38;5;130m 63 [m   [106m}[1;17H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 58 [m   [32mchar[m buffer[[31m0x1000[m];[2;17H{[6;8H}[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 57 [m   string ls_output;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 56 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 55 [m      [38;5;130mreturn[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 54 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 53 [m      header.nbytes = htonl (errno);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 52 [m      header.command = cxi_command::NAK;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 51 [m      outlog << ls_cmd << [31m": "[m << strerror (errno) << endl;[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 50 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 49 [m   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 48 [m   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 47 [m[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 45 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 38 [m   header.command = cxi_command::LSOUT;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 37 [m   pclose (ls_pipe);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 36 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 35 [m      ls_output.append (buffer);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 34 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 33 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[1;41H[?12l[?25h[?25l[5;29r[5;1H[L[1;30r[1;3H[38;5;130m2 [m   [38;5;130mfor[m (;;) [106m{[m[1;18H[K[2;3H[38;5;130m3[m[7C[32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[3;3H[38;5;130m4[7Cif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[3;36H[K[4;3H[38;5;130m5[m[4C   ls_output.append (buffer);
[38;5;130m 36 [m   [106m}[1;17H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 31 [m   [32mchar[m buffer[[31m0x1000[m];[2;17H{[6;8H}[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 30 [m   string ls_output;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 29 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 28 [m      [38;5;130mreturn[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 27 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;41H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 26 [m      header.nbytes = htonl (errno);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 25 [m      header.command = cxi_command::NAK;[?12l[?25h[2;40H[3;41H[4;17H[5;8H[6;24H[7;27H[?25l[8;17H[106m{[12;8H}[8;17H[?12l[?25h[?25l[m{[12;8H}[9;41H[?12l[?25h[10;35H[11;36H[?25l[8;17H[106m{[12;8H}[?12l[?25h[?25l[m[8;17H{[12;8H}[13;24H[?12l[?25h[14;41H[15;41H[16;41H[17;41H[18;41H[19;41H[20;41H[21;5H[22;5H[23;41H[24;41H[25;41H[26;33H[27;41H[28;41H[29;40H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 54 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;41H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 55 [m      [38;5;130mreturn[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[23;32H[106m{[m[29;1H[38;5;130m 56 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[22;32H{[28;8H}
[38;5;130m 57 [m   string ls_output;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 58 [m   [32mchar[m buffer[[31m0x1000[m];[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 59 [m   [38;5;130mfor[m (;;) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 60 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[29;41H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 61 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 62 [m      ls_output.append (buffer);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[25;17H[106m{[m[29;1H[38;5;130m 63 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[24;17H{[28;8H}
[38;5;130m 64 [m   pclose (ls_pipe);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 65 [m   header.command = cxi_command::LSOUT;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 66 [m   header.nbytes = htonl (ls_output.size());[29;41H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 67 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[29;41H[?12l[?25h[28;41H[27;41H[26;24H[?25l[21;17H[106m{[25;8H}[?12l[?25h[?25l[m[21;17H{[25;8H}[24;36H[?12l[?25h[23;35H[22;41H[?25l[21;17H[106m{[25;8H}[21;17H[?12l[?25h[?25l[m{[25;8H}[20;27H[?12l[?25h[19;24H[?25l[12;32H[106m{[18;8H}[?12l[?25h[?25l[m[12;32H{[18;8H}[17;17H[?12l[?25h[16;41H[15;40H[14;41H[13;41H[12;33H[11;41H[10;41H[9;41H[?25l[106m([48C)[9;19H[?12l[?25h[?25l[m([48C)[9;18H[?12l[?25hs[?25l[30;1H[1m-- INSERT (paste) --[9;18H[?12l[?25h[?25l[m (accepted_socket& client_sock, cxi_header& header) {[9;70H[K[9;17H[?12l[?25h[?25l (accepted_socket& client_sock, cxi_header& header) {[9;69H[K[9;16H[?12l[?25h[?25lr (accepted_socket& client_sock, cxi_header& header) {[9;17H[?12l[?25h[?25lm (accepted_socket& client_sock, cxi_header& header) {[9;18H[?12l[?25h[30;1H[K[9;17H[?25l[?12l[?25h[10;17H[1C[1C[1C [1C[1C[1C[1C ls_cm[?25ld[106m[][?12l[?25h[?25l[[?12l[?25h[?25l[m[][?12l[?25h = [1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[?25l[30;1H[1m-- INSERT (paste) --[10;48H[?12l[?25h[?25l[m[31m"[m;[10;49H[K[10;47H[?12l[?25h[?25l[31m"[m;[10;48H[K[10;46H[?12l[?25h[?25l[31m"[m;[10;47H[K[10;45H[?12l[?25h[?25l[31m"[m;[10;46H[K[10;44H[?12l[?25h[?25l[31m"[m;[10;45H[K[10;43H[?12l[?25h[?25l[31m"[m;[10;44H[K[10;42H[?12l[?25h[?25l[31m"[m;[10;43H[K[10;41H[?12l[?25h[?25l[31m"[m;[10;42H[K[10;40H[?12l[?25h[?25l[31m"[m;[10;41H[K[10;39H[?12l[?25h[?25l[31m"[m;[10;40H[K[10;38H[?12l[?25h[?25l[31mr"[m;[?12l[?25h[?25l[31mm"[m;[?12l[?25h[?25l[31m "[m;[?12l[?25h[30;1H[K[10;40H[?25l[?12l[?25h[1C[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"../cxid.cpp" 208L, 6092C written
[?1l>[?12l[?25h[?1049lbash-4.2$ vim ../cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"../cxid.cpp" 208L, 6092C[>c[1;1H[38;5;130m 34 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 35 [m      ls_output.append (buffer);
[38;5;130m 36 [m   }
[38;5;130m 37 [m   pclose (ls_pipe);
[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"rm "[m;
[38;5;130m 49 [m   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);
[38;5;130m 50 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 51 [m      outlog << ls_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 52 [m      header.command = cxi_command::NAK;
[38;5;130m 53 [m      header.nbytes = htonl (errno);
[38;5;130m 54 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 55 [m      [38;5;130mreturn[m;
[38;5;130m 56 [m   }
[38;5;130m 57 [m   string ls_output;
[38;5;130m 58 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 59 [m   [38;5;130mfor[m (;;) {
[38;5;130m 60 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 61 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 62 [m      ls_output.append (buffer);[15;8H[?12l[?25h[16;8H[17;8H[18;8H[19;8H  [18;10H outlog << ls[?25l[30;1H[1m-- INSERT (paste) --[m[30;21H[K[18;23H[?12l[?25h[?25l_cmd << [31m": "[m << strerror (errno) << endl;[18;63H[K[18;22H[?12l[?25h[?25l_cmd << [31m": "[m << strerror (errno) << endl;[18;62H[K[18;21H[?12l[?25h[?25lr_cmd << [31m": "[m << strerror (errno) << endl;[18;22H[?12l[?25h[?25lm_cmd << [31m": "[m << strerror (errno) << endl;[18;23H[?12l[?25h[30;1H[K[18;22H[?25l[?12l[?25h[19;22H[20;22H[21;22H[22;17H[?25l[17;32H[106m{[23;8H}[?12l[?25h[?25l[m[17;32H{[23;8H}[24;22H[?12l[?25h[25;22H[26;17H[27;22H[28;22H[29;22H[?25l[1;29r[29;1H
[1;30r[25;17H[106m{[m[29;1H[38;5;130m 63 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[24;17H{[28;8H}
[38;5;130m 64 [m   pclose (ls_pipe);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 65 [m   header.command = cxi_command::LSOUT;[29;22H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 66 [m   header.nbytes = htonl (ls_output.size());[29;22H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 67 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[29;22H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 68 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[29;22H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 69 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;22H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 70 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[29;22H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 71 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[29;22H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[4;70H[106m{[m[29;1H[38;5;130m 72 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[3;70H{[28;5H}
[38;5;130m 73 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 74 [m[32mvoid[m run_server (accepted_socket& client_sock) {[29;22H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 75 [m   outlog.execname (outlog.execname() + [31m"*"[m);[29;22H[?12l[?25h[28;22H[27;5H[?25l[1;70H[106m{[26;5H}[?12l[?25h[?25l[m[1;70H{[26;5H}[25;22H[?12l[?25h[24;22H[23;22H[22;22H[21;22H[20;22H[19;22H[18;22H[?25l[13;17H[106m{[17;8H}[?12l[?25h[?25l[m[13;17H{[17;8H}[16;22H[?12l[?25h[15;22H[14;22H[?25l[13;17H[106m{[17;8H}[13;17H[?12l[?25h[?25l[m{[17;8H}[12;22H[?12l[?25h[11;22H[?25l[4;32H[106m{[10;8H}[?12l[?25h[?25l[m[4;32H{[10;8H}[9;17H[?12l[?25h[8;22H[7;22H[6;22H[5;22H[4;22H[3;22H[2;22H[1;22H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 45 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[1;22H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[1;22H[?12l[?25h[2;22H[3;5H[4;5H[5;22H[6;22H[1C[1C[1C ls_cm[?25ld[106m[][?12l[?25h[?25l[[?12l[?25h[?25l[m[][?12l[?25h [?25l[106m[][?12l[?25h[?25l[?12l[?25h[?25l[m[][?12l[?25hs[?25l[30;1H[1m-- INSERT (paste) --[6;28H[?12l[?25h[?25l[m_cmd[] = [31m"rm "[m;[6;42H[K[6;27H[?12l[?25h[?25l_cmd[] = [31m"rm "[m;[6;41H[K[6;26H[?12l[?25h[?25lr_cmd[] = [31m"rm "[m;[6;27H[?12l[?25h[?25lm_cmd[] = [31m"rm "[m;[6;28H[?12l[?25h_cm[?25ld[106m[][?12l[?25h[?25l[[?12l[?25h[?25l][?12l[?25h[?25l[m[] [?12l[?25h= [1C[1C[1C[1C[1C[?25l,;[?12l[?25h[?25l;[6;43H[K[6;42H[?12l[?25h[?25l[31m;[m[6;42H[K[6;41H[?12l[?25h[?25l[31m"[m;[?12l[?25h[?25l ;[?12l[?25h[?25l+;[?12l[?25h[?25l ;[?12l[?25h[?25lh;[?12l[?25h[?25le;[?12l[?25h[?25la;[?12l[?25h[?25ld;[?12l[?25h[?25le;[?12l[?25h[?25lr;[?12l[?25h[?25l.;[?12l[?25h[?25lf;[?12l[?25h[?25li;[?12l[?25h[?25ll;[?12l[?25h[?25le;[?12l[?25h[?25ln;[?12l[?25h[?25la;[?12l[?25h[?25lm;[?12l[?25h[?25le;[?12l[?25h;[5;61H heade[?25l[5;19H[106m([48C)[?12l[?25h[?25l)[?12l[?25h[?25l[m[5;19H([48C) [?12l[?25h{[?25l[6;8H[K[7;8H[32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm [m[1C + header.filename;[8;8H[32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[9;8H[38;5;130mif[m (ls_pipe == [31mnullptr[m) { [9;34H[K[10;11Houtlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[11;18Hcommand = cxi_command::NAK;[12;11Hheader.nbytes = htonl (errno);[12;41H[K[13;11Hsend_packet (client_sock, &header, [38;5;130msizeof[m header);[14;8H   [38;5;130mreturn[m;[15;8H}[15;9H[K[16;8Hstring ls_output;[16;25H[K[17;8H[32mchar[m buffer[[31m0x1000[m];[18;8H[38;5;130mfor[m (;;) {[18;18H[K[19;11H[32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[20;11H[38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[20;36H[K[21;8H   ls_output.append (buffer);[22;8H}[22;9H[K[23;8Hpclose (ls_pipe);[23;25H[K[24;15Hcommand = cxi_command::LSOUT;[24;44H[K[25;8Hheader.nbytes = htonl (ls_output.size());[25;49H[K[26;8Hmemset (header.filename, [31m0[m, FILENAME_SIZE);[27;8HDEBUGF ([31m'h'[m, [31m"sending header "[m << header);[27;50H[K[28;34H&header, [38;5;130msizeof[m header);[28;58H[K[29;8Hsend_packet (client_sock, ls_output.c_str(), ls_output.size());[6;5H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lc[?12l[?25h[?25lo[?12l[?25h[?25lu[?12l[?25h[?25lt[?12l[?25h[?25l [?12l[?25h[?25l<[?12l[?25h[?25l<[?12l[?25h[?25l [?12l[?25h[?25lh[?12l[?25h[?25le[?12l[?25h[?25la[?12l[?25h[?25ld[?12l[?25h[?25le[?12l[?25h[?25lr[?12l[?25h[?25l.[?12l[?25h[?25lf[?12l[?25h[?25li[?12l[?25h[?25ll[?12l[?25h[?25le[?12l[?25h[?25ln[?12l[?25h[?25la[?12l[?25h[?25lm[?12l[?25h[?25le[?12l[?25h[?25l;[?12l[?25h[?25l[7;8H[K[8;8H[32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm [m[1C + header.filename;[9;8H[32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[10;8H[38;5;130mif[m (ls_pipe == [31mnullptr[m) { [10;34H[K[11;11Houtlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[12;18Hcommand = cxi_command::NAK;[13;11Hheader.nbytes = htonl (errno);[13;41H[K[14;11Hsend_packet (client_sock, &header, [38;5;130msizeof[m header);[15;8H   [38;5;130mreturn[m;[16;8H}[16;9H[K[17;8Hstring ls_output;[17;25H[K[18;8H[32mchar[m buffer[[31m0x1000[m];[19;8H[38;5;130mfor[m (;;) {[19;18H[K[20;11H[32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[21;11H[38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[21;36H[K[22;8H   ls_output.append (buffer);[23;8H}[23;9H[K[24;8Hpclose (ls_pipe);[24;25H[K[25;15Hcommand = cxi_command::LSOUT;[25;44H[K[26;8Hheader.nbytes = htonl (ls_output.size());[26;49H[K[27;8Hmemset (header.filename, [31m0[m, FILENAME_SIZE);[28;8HDEBUGF ([31m'h'[m, [31m"sending header "[m << header);[28;50H[K[29;34H&header, [38;5;130msizeof[m header);[29;58H[K[7;5H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25le[?12l[?25h[?25lx[?12l[?25h[?25li[?12l[?25h[?25lt[?12l[?25h[?25l([?12l[?25h[?25l[31m0[?12l[?25h[?25l[m)[106m([1C)[?12l[?25h[?25l[m;([1C);[?12l[?25h[30;1H[K[7;15H[?25l[?12l[?25h[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"../cxid.cpp" 210L, 6150C written
[?1l>[?12l[?25h[?1049lbash-4.2$ make
make: *** No targets specified and no makefile found.  Stop.
bash-4.2$ ../make
bash: ../make: No such file or directory
bash-4.2$ cd ../
bash-4.2$ make
checksource cxi.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl cxi.cpp
Done processing cxi.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxi.cpp
checksource protocol.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl protocol.cpp
Done processing protocol.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c protocol.cpp
checksource socket.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl socket.cpp
Done processing socket.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c socket.cpp
checksource debug.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl debug.cpp
Done processing debug.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c debug.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -o cxi cxi.o protocol.o socket.o debug.o
checksource cxid.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl cxid.cpp
Done processing cxid.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxid.cpp
cxid.cpp: In function â€˜void reply_rm(accepted_socket&, cxi_header&)â€™:
cxid.cpp:50:39: error: invalid operands of types â€˜const char [4]â€™ and â€˜char [59]â€™ to binary â€˜operator+â€™
   50 |    static const char rm_cmd[] = "rm " + header.filename;
      |                                 ~~~~~ ^ ~~~~~~~~~~~~~~~
      |                                 |              |
      |                                 const char [4] char [59]
cxid.cpp:51:27: error: â€˜ls_cmdâ€™ was not declared in this scope; did you mean â€˜rm_cmdâ€™?
   51 |    FILE* ls_pipe = popen (ls_cmd, "r");
      |                           ^~~~~~
      |                           rm_cmd
make: *** [Makefile:41: cxid.o] Error 1
bash-4.2$ makecd ../../make[3Pmakevim ../cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"../cxid.cpp" [New File][>c[1;1H[38;5;130m  1 [m
[94m~                                                                                                                 [3;1H~                                                                                                                 [4;1H~                                                                                                                 [5;1H~                                                                                                                 [6;1H~                                                                                                                 [7;1H~                                                                                                                 [8;1H~                                                                                                                 [9;1H~                                                                                                                 [10;1H~                                                                                                                 [11;1H~                                                                                                                 [12;1H~                                                                                                                 [13;1H~                                                                                                                 [14;1H~                                                                                                                 [15;1H~                                                                                                                 [16;1H~                                                                                                                 [17;1H~                                                                                                                 [18;1H~                                                                                                                 [19;1H~                                                                                                                 [20;1H~                                                                                                                 [21;1H~                                                                                                                 [22;1H~                                                                                                                 [23;1H~                                                                                                                 [24;1H~                                                                                                                 [25;1H~                                                                                                                 [26;1H~                                                                                                                 [27;1H~                                                                                                                 [28;1H~                                                                                                                 [29;1H~                                                                                                                 [1;5H[?12l[?25h[?25l[m[30;1H[K[30;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[30;1H[K[30;1H[?1l>[?12l[?25h[?1049lbash-4.2$ vim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 210L, 6150C[>c[1;1H[38;5;130m 35 [m      ls_output.append (buffer);
[38;5;130m 36 [m   }
[38;5;130m 37 [m   pclose (ls_pipe);
[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm "[m + header.filename;
[38;5;130m 51 [m   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);
[38;5;130m 52 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 53 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 54 [m      header.command = cxi_command::NAK;
[38;5;130m 55 [m      header.nbytes = htonl (errno);
[38;5;130m 56 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 57 [m      [38;5;130mreturn[m;
[38;5;130m 58 [m   }
[38;5;130m 59 [m   string ls_output;
[38;5;130m 60 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 61 [m   [38;5;130mfor[m (;;) {
[38;5;130m 62 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 63 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[15;8H[?12l[?25h[16;8H[17;8H[1C[1C[1C[1C* ls_pipe = popen[?25l [106m([11C)[17;30H[?12l[?25h[?25l[m([11C)[17;31H[?12l[?25hls[?25l[30;1H[1m-- INSERT (paste) --[m[30;21H[K[17;33H[?12l[?25h[?25l_cmd, [31m"r"[m);[17;43H[K[17;32H[?12l[?25h[?25l_cmd, [31m"r"[m);[17;42H[K[17;30H[106m([9C)[17;31H[?12l[?25h[?25l[mr_cmd, [31m"r[m[31m[106m"[m);[17;30H([9C[31m"[17;32H[?12l[?25h[?25l[mm_cmd, [31m"r"[m);[17;33H[?12l[?25h[30;1H[K[17;32H[?25l[?12l[?25h[?25l[18;32H[106m{[24;8H}[18;32H[?12l[?25h[?25l[m{[24;8H}[19;32H[?12l[?25h[20;32H[21;32H[22;32H[23;17H[?25l[18;32H[106m{[24;8H}[?12l[?25h[?25l[m[18;32H{[24;8H}[25;24H[?12l[?25h[26;27H[27;17H[28;32H[29;32H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 64 [m      ls_output.append (buffer);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[25;17H[106m{[m[29;1H[38;5;130m 65 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[24;17H{[28;8H}
[38;5;130m 66 [m   pclose (ls_pipe);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 67 [m   header.command = cxi_command::LSOUT;[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 68 [m   header.nbytes = htonl (ls_output.size());[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 69 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 70 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[29;32H[?12l[?25h[28;32H[27;32H[26;32H[25;24H[?25l[20;17H[106m{[24;8H}[?12l[?25h[?25l[m[20;17H{[24;8H}[23;32H[?12l[?25h[?25l[20;17H[106m{[24;8H}[?12l[?25h[?25l[m[20;17H{[24;8H}[25;24H[?12l[?25h[26;32H[27;32H[28;32H[29;32H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 71 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 72 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 73 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[2;70H[106m{[m[29;1H[38;5;130m 74 [m[106m}[?12l[?25h[?25l[m[1;3H[38;5;130m7[m[1C[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[2;3H[38;5;130m8[m[1C   cout << header.filename;[2;32H[K[3;3H[38;5;130m9[m[4Cexit([31m0[m);[3;16H[K[4;2H[38;5;130m50[m[4C[32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm "[m + header.filename;[5;3H[38;5;130m1[m[4C[32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r[m[1C);[5;45H[K[6;3H[38;5;130m2 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) { [6;34H[K[7;3H[38;5;130m3[m[4C   outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[8;3H[38;5;130m4[m[7Cheader.command = cxi_command::NAK;[8;45H[K[9;3H[38;5;130m5[m[14Cnbytes = htonl (errno);[9;41H[K[10;3H[38;5;130m6[m[7Csend_packet (client_sock, &header, [38;5;130msizeof[m header);[11;3H[38;5;130m7[7Creturn[m;[11;18H[K[12;3H[38;5;130m8[m[4C}[12;11H[K[13;3H[38;5;130m9[m[4Cstring ls_output;[14;2H[38;5;130m60[m[4C[32mchar[m buffer[[31m0x1000[m];[15;3H[38;5;130m1 [m   [38;5;130mfor[m (;;) {[15;18H[K[16;3H[38;5;130m2[m[4C   [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[17;3H[38;5;130m3[7Cif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[17;37H[K[18;3H[38;5;130m4[m[7Cls_output.append (buffer);[19;3H[38;5;130m5[m[4C}[19;11H[K[20;3H[38;5;130m6[m[4Cpclose (ls_pipe);[21;3H[38;5;130m7[m[4Cheader.command = cxi_command::LSOUT;[22;3H[38;5;130m8[m[11Cnbytes = htonl (ls_output.size());[23;3H[38;5;130m9[m[4Cmemset (header.filename, [31m0[m, FILENAME_SIZE);[24;2H[38;5;130m70[m[4CDEBUGF ([31m'h'[m, [31m"sending header "[m << header);[24;50H[K[25;3H[38;5;130m1[m[4Csend_packet (client_sock, &header, [38;5;130msizeof[m header);[26;3H[38;5;130m2[m[30Cls_output.c_str(), ls_output.size());[27;3H[38;5;130m3[m[4CDEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[27;62H[K[28;3H[38;5;130m4[m[1C}[28;8H[K[29;3H[38;5;130m5[m[29;5H[K[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 76 [m[32mvoid[m run_server (accepted_socket& client_sock) {[29;32H[?12l[?25h[28;5H[27;5H[26;32H[25;32H[24;32H[23;32H[22;32H[21;32H[20;32Hmand::LSOUT[?25l[30;1H[1m-- INSERT (paste) --[20;43H[?12l[?25h[?25l[m;[20;43H[K[20;42H[?12l[?25h[?25l;[20;42H[K[20;41H[?12l[?25h[?25l;[20;41H[K[20;40H[?12l[?25h[?25l;[20;40H[K[20;39H[?12l[?25h[?25l;[20;39H[K[20;38H[?12l[?25h[?25lA;[?12l[?25h[?25lC;[?12l[?25h[?25lK;[?12l[?25h[?25lj;[?12l[?25h[?25lj;[?12l[?25h[?25l;[20;43H[K[20;42H[?12l[?25h[?25l;[20;42H[K[20;41H[?12l[?25h[30;1H[K[20;40H[?25l[?12l[?25h[21;40H[22;40H[23;40H[24;40H[25;40Hs[?25l[30;1H[1m-- INSERT (paste) --[25;36H[?12l[?25h[?25l[m_output.c_str(), ls_output.size());[25;70H[K[25;35H[?12l[?25h[?25l_output.c_str(), ls_output.size());[25;69H[K[25;34H[?12l[?25h[?25lr_output.c_str(), ls_output.size());[25;35H[?12l[?25h[?25lm_output.c_str(), ls_output.size());[25;36H[?12l[?25h[?25ll_output.c_str(), ls_output.size());[25;37H[?12l[?25h[?25l_output.c_str(), ls_output.size());[25;71H[K[25;36H[?12l[?25h[30;1H[K[25;35H[?25l[?12l[?25hm_output.c_st[?25lr[106m()[?12l[?25h[?25l([?12l[?25h[?25l[m()[?12l[?25h, ls[?25l[30;1H[1m-- INSERT (paste) --[25;55H[?12l[?25h[?25l[m_output.size());[25;70H[K[25;54H[?12l[?25h[?25l_output.size());[25;69H[K[25;53H[?12l[?25h[?25lr_output.size());[25;54H[?12l[?25h[?25lm_output.size());[25;55H[?12l[?25h[30;1H[K[25;54H[?25l[?12l[?25h[26;54H[?25l[106m()[?12l[?25h[?25l[?12l[?25h[?25l[m()[?12l[?25hls[?25l[30;1H[1m-- INSERT (paste) --[26;34H[?12l[?25h[?25l[m_output.size() << [31m" bytes"[m);[26;61H[K[26;33H[?12l[?25h[?25l_output.size() << [31m" bytes"[m);[26;60H[K[26;32H[?12l[?25h[?25lr_output.size() << [31m" bytes"[m);[26;33H[?12l[?25h[?25lm_output.size() << [31m" bytes"[m);[26;34H[?12l[?25h[30;1H[K[26;33H[?25l[?12l[?25h[?25l[30;1H/[?12l[?25hl[?25l[?12l[?25hs[?25l[?12l[?25h_[?25l[?12l[?25ho[?25l[?12l[?25hu[?25l[?12l[?25ht[?25l[?12l[?25hp[?25l[?12l[?25hu[?25l[?12l[?25ht[?25l[?12l[?25h[?25l[31msearch hit BOTTOM, continuing at TOP[27m[m[H[2J[1;1H[38;5;130m 16 
 17 [mlogstream outlog (cout);
[38;5;130m 18 [m[32mstruct[m cxi_exit: [38;5;130mpublic[m exception {};
[38;5;130m 19 
 20 [m[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 21 [m   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;
[38;5;130m 22 [m   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);
[38;5;130m 23 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 24 [m      outlog << ls_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 25 [m      header.command = cxi_command::NAK;
[38;5;130m 26 [m      header.nbytes = htonl (errno);
[38;5;130m 27 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 28 [m      [38;5;130mreturn[m;
[38;5;130m 29 [m   }
[38;5;130m 30 [m   string [103mls_output[m;
[38;5;130m 31 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 32 [m   [38;5;130mfor[m (;;) {
[38;5;130m 33 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 34 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 35 [m      [103mls_output[m.append (buffer);
[38;5;130m 36 [m   }
[38;5;130m 37 [m   pclose (ls_pipe);
[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl ([103mls_output[m.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, [103mls_output[m.c_str(), [103mls_output[m.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << [103mls_output[m.size() << [31m" bytes"[m);
[31msearch hit BOTTOM, continuing at TOP[15;15H[?12l[?25h[?25l[m[30;1H/ls_output[30;11H[K[30;1H[20;11H[?12l[?25h[?25l[30;1H[24;31H[?12l[?25h[?25l[30;1H[28;34H[?12l[?25h[?25l

[28;53H[?12l[?25h[?25l

[29;32H[?12l[?25h[?25l
[1;29r[1;1H[15M[1;30r[15;1H[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm "[m + header.filename;
[38;5;130m 51 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);
[38;5;130m 52 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 53 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 54 [m      header.command = cxi_command::NAK;
[38;5;130m 55 [m      header.nbytes = htonl (errno);
[38;5;130m 56 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 57 [m      [38;5;130mreturn[m;
[38;5;130m 58 [m   }
[38;5;130m 59 [m   string [103mls_output[m;[30;1H[K[29;15H[?12l[?25h[?25l
/ls_output[1;29r[1;1H[5M[1;30r[25;1H[38;5;130m 60 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 61 [m   [38;5;130mfor[m (;;) {
[38;5;130m 62 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 63 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 64 [m      [103mls_output[m.append (buffer);[30;1H[K[29;11H[?12l[?25h[?25l
/ls_output[1;29r[1;1H[4M[1;30r[26;1H[38;5;130m 65 [m   }
[38;5;130m 66 [m   pclose (ls_pipe);
[38;5;130m 67 [m   header.command = cxi_command::ACK;
[38;5;130m 68 [m   header.nbytes = htonl ([103mls_output[m.size());[30;1H[K[29;31H[?12l[?25h[?25l
/ls_output[31msearch hit BOTTOM, continuing at TOP[1;29r[m[1;1H[10L[1;30r[1;1H[38;5;130m 30 [m   string [103mls_output[m;
[38;5;130m 31 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 32 [m   [38;5;130mfor[m (;;) {
[38;5;130m 33 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 34 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 35 [m      [103mls_output[m.append (buffer);
[38;5;130m 36 [m   }
[38;5;130m 37 [m   pclose (ls_pipe);
[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl ([103mls_output[m.size());[30;1H[K[30;1H[31msearch hit BOTTOM, continuing at TOP[1;15H[?12l[?25h[?25l[m[30;1H/ls_output[30;11H[K[30;1H[6;11H[?12l[?25h[?25l[30;1H[10;31H[?12l[?25h[?25l[30;1H[14;34H[?12l[?25h[15;34H[14;34H[13;34H[12;34H[11;34H[10;34H[9;34H[8;24H[?25l[3;17H[106m{[7;8H}[?12l[?25h[?25l[m[3;17H{[7;8H}[6;34H[?12l[?25h[5;34H[4;34H[?25l[3;17H[106m{[7;8H}[3;17H[?12l[?25h[?25l[m{[7;8H}[2;27H[?12l[?25h[1;24H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 29 [m   }[30;1H[K[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 28 [m      [38;5;130mreturn[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 27 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 26 [m      header.nbytes = htonl (errno);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 25 [m      header.command = cxi_command::NAK;[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 24 [m      outlog << ls_cmd << [31m": "[m << strerror (errno) << endl;[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 23 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 22 [m   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 21 [m   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 20 [m[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 19 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 18 [m[32mstruct[m cxi_exit: [38;5;130mpublic[m exception {};[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 17 [mlogstream outlog (cout);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 16 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 15 [m[35m#include [m[31m"socket.h"[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 14 [m[35m#include [m[31m"protocol.h"[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 13 [m[35m#include [m[31m"logstream.h"[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 12 [m[35m#include [m[31m"debug.h"[?12l[?25h[2;26H[3;25H[4;23H[5;5H[6;28H[7;34H[8;5H[9;34H[10;34H[11;34H[12;33H[13;34H[14;34H[15;34H[16;34H[17;17H[?25l[m[12;32H[106m{[18;8H}[?12l[?25h[?25l[m[12;32H{[18;8H}[19;24H[?12l[?25h[20;27H[?25l[21;17H[106m{[25;8H}[21;17H[?12l[?25h[?25l[m{[25;8H}[22;34H[?12l[?25h[23;34H[24;34H[?25l[21;17H[106m{[25;8H}[?12l[?25h[?25l[m[21;17H{[25;8H}[26;24H[?12l[?25h[27;34H[28;34H[29;34H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 43 [m   send_packet (client_sock, [103mls_output[m.c_str(), [103mls_output[m.size());[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << [103mls_output[m.size() << [31m" bytes"[m);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[4;70H[106m{[m[29;1H[38;5;130m 45 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[3;70H{[28;5H}
[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 48 [m   cout << header.filename;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 49 [m   exit([31m0[m);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 50 [m   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm "[m + header.filename;[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 51 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 52 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 53 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 54 [m      header.command = cxi_command::NAK;[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 55 [m      header.nbytes = htonl (errno);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 56 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 57 [m      [38;5;130mreturn[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[23;32H[106m{[m[29;1H[38;5;130m 58 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[22;32H{[28;8H}
[38;5;130m 59 [m   string [103mls_output[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 60 [m   [32mchar[m buffer[[31m0x1000[m];[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 61 [m   [38;5;130mfor[m (;;) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 62 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 63 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 64 [m      [103mls_output[m.append (buffer);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[25;17H[106m{[m[29;1H[38;5;130m 65 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[24;17H{[28;8H}
[38;5;130m 66 [m   pclose (ls_pipe);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 67 [m   header.command = cxi_command::ACK;[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 68 [m   header.nbytes = htonl ([103mls_output[m.size());[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 69 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 70 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 71 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 72 [m   send_packet (client_sock, rm_output.c_str(), rm_output.size());[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 73 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << rm_output.size() << [31m" bytes"[m);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[2;70H[106m{[m[29;1H[38;5;130m 74 [m[106m}[?12l[?25h[?25l[m[1;3H[38;5;130m7[m[1C[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[2;3H[38;5;130m8[m[1C   cout << header.filename;[2;32H[K[3;3H[38;5;130m9[m[4Cexit([31m0[m);[3;16H[K[4;2H[38;5;130m50[m[4C[32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm "[m + header.filename;[5;3H[38;5;130m1[m[4C[32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r[m[1C);[5;45H[K[6;3H[38;5;130m2 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) { [6;34H[K[7;3H[38;5;130m3[m[4C   outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[8;3H[38;5;130m4[m[7Cheader.command = cxi_command::NAK;[8;45H[K[9;3H[38;5;130m5[m[14Cnbytes = htonl (errno);[9;41H[K[10;3H[38;5;130m6[m[7Csend_packet (client_sock, &header, [38;5;130msizeof[m header);[11;3H[38;5;130m7[7Creturn[m;[11;18H[K[12;3H[38;5;130m8[m[4C}[12;11H[K[13;3H[38;5;130m9[m[4Cstring [103mls_output[m;[14;2H[38;5;130m60[m[4C[32mchar[m buffer[[31m0x1000[m];[15;3H[38;5;130m1 [m   [38;5;130mfor[m (;;) {[15;18H[K[16;3H[38;5;130m2[m[4C   [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[17;3H[38;5;130m3[7Cif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[17;37H[K[18;3H[38;5;130m4[m[7C[103mls_output[m.append (buffer);[19;3H[38;5;130m5[m[4C}[19;11H[K[20;3H[38;5;130m6[m[4Cpclose (ls_pipe);[21;3H[38;5;130m7[m[4Cheader.command = cxi_command::ACK;[22;3H[38;5;130m8[m[11Cnbytes = htonl ([103mls_output[m.size());[23;3H[38;5;130m9[m[4Cmemset (header.filename, [31m0[m, FILENAME_SIZE);[24;2H[38;5;130m70[m[4CDEBUGF ([31m'h'[m, [31m"sending header "[m << header);[24;50H[K[25;3H[38;5;130m1[m[4Csend_packet (client_sock, &header, [38;5;130msizeof[m header);[26;3H[38;5;130m2[m[30Crm_output.c_str(), rm_output.size());[27;3H[38;5;130m3[m[4CDEBUGF ([31m'h'[m, [31m"sent "[m << rm_output.size() << [31m" bytes"[m);[27;62H[K[28;3H[38;5;130m4[m[1C}[28;8H[K[29;3H[38;5;130m5[m[29;5H[K[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 76 [m[32mvoid[m run_server (accepted_socket& client_sock) {[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 77 [m   outlog.execname (outlog.execname() + [31m"*"[m);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 78 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 79 [m   [38;5;130mtry[m {  [?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 80 [m      [38;5;130mfor[m (;;) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 81 [m[9Ccxi_header header;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 82 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 83 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 84 [9Cswitch[m (header.command) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 85 [12Ccase[m cxi_command::LS:[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 86 [m[15Creply_ls (client_sock, header);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 87 [15Cbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 88 [12Ccase[m cxi_command::RM:[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 89 [m[15Creply_rm (client_sock, header);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 90 [15Cbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 91 [12Cdefault[m:[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 92 [m[15Coutlog << [31m"invalid client header:"[m << header << endl;[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 93 [15Cbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[19;38H[106m{[m[29;1H[38;5;130m 94 [m[9C[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[14;20H[106m{[m[18;38H{[28;14H}
[38;5;130m 95 [m      [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[13;20H{[28;11H}
[38;5;130m 96 [m   }[38;5;130mcatch[m (socket_error& error) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 97 [m      outlog << error.what() << endl;[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 98 [m   }[38;5;130mcatch[m (cxi_exit& error) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 99 [m      DEBUGF ([31m'x'[m, [31m"caught cxi_exit"[m);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[27;33H[106m{[m

[38;5;130m100 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[26;33H{[28;8H}
[38;5;130m101 [m   [38;5;130mthrow[m cxi_exit();[?12l[?25h[?25l[1;29r[29;1H
[1;30r[3;52H[106m{[m[29;1H[38;5;130m102 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[2;52H{[28;5H}
[38;5;130m103 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m104 [m[32mvoid[m fork_cxiserver (server_socket& server, accepted_socket& accept) {[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m105 [m   pid_t pid = fork();[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m106 [m   [38;5;130mif[m (pid == [31m0[m) { [34m// child[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m107 [m      server.close();[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m108 [m      run_server (accept);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m109 [m      [38;5;130mthrow[m cxi_exit();[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m110 [m   }[38;5;130melse[m {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m111 [m      accept.close();[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m112 [m      [38;5;130mif[m (pid < [31m0[m) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m113 [m[9Coutlog << [31m"fork failed: "[m << strerror (errno) << endl;[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m114 [m      }[38;5;130melse[m {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m115 [m[9Coutlog << [31m"forked cxiserver pid "[m << pid << endl;[29;34H[?12l[?25h[28;17H[27;34H[?25l[26;24H[106m{[28;11H}[26;24H[?12l[?25h[?25l[m{[28;11H}[25;25H[?12l[?25h[24;14H[23;27H[22;30H[21;25H[20;31H[19;26H[18;34H[17;5H[16;5H[15;24H[?25l[12;33H[106m{[14;8H}[?12l[?25h[?25l[m[12;33H{[14;8H}[13;34H[?12l[?25h[?25l[12;33H[106m{[14;8H}[12;33H[?12l[?25h[?25l[m{[14;8H}[11;34H[?12l[?25h[10;34H[9;11H[8;14H[7;25H[6;34H[5;24H[4;25H[3;34H[2;34H[1;25H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 86 [m[15Creply_ls (client_sock, header);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 85 [12Ccase[m cxi_command::LS:[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 84 [9Cswitch[m (header.command) {[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 83 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 82 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 81 [m[9Ccxi_header header;[?12l[?25h[?25l[16;29r[16;1H[L[1;30r[1;3H[38;5;130m0[7Cfor[m (;;) [106m{[m[1;21H[K[2;3H[38;5;130m1[m[10Ccxi_header header; [2;33H[K[3;3H[38;5;130m2[m[10Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[4;3H[38;5;130m3[m[10CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[5;3H[38;5;130m4[10Cswitch[m (header.command) {[6;3H[38;5;130m5[13Ccase[m cxi_command::LS: [6;39H[K[7;3H[38;5;130m6[m[16Creply_ls (client_sock, header);[8;3H[38;5;130m7[m[13C   [38;5;130mbreak[m;[8;26H[K[9;3H[38;5;130m8[13Ccase[m cxi_command::RM: [9;39H[K[10;2H[38;5;130m89[m[16Creply_rm (client_sock, header);[11;3H[38;5;130m0[m[13C   [38;5;130mbreak[m;[12;3H[38;5;130m1[13Cdefault[m:[12;25H[K[13;3H[38;5;130m2[m[16Coutlog << [31m"invalid client header:"[m << header << endl;[14;3H[38;5;130m3[m[10C      [38;5;130mbreak[m;[15;3H[38;5;130m4[m[7C   }
[38;5;130m 95 [m      [106m}[1;20H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 79 [m   [38;5;130mtry[m {[2;20H{[17;11H}[1;15H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 78 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 77 [m   outlog.execname (outlog.execname() + [31m"*"[m);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 76 [m[32mvoid[m run_server (accepted_socket& client_sock) {[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 75 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 74 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 73 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << rm_output.size() << [31m" bytes"[m);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 72 [m   send_packet (client_sock, rm_output.c_str(), rm_output.size());[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 71 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 70 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 69 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 68 [m   header.nbytes = htonl ([103mls_output[m.size());[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 67 [m   header.command = cxi_command::ACK;[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 66 [m   pclose (ls_pipe);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 65 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 64 [m      [103mls_output[m.append (buffer);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 63 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 62 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[1;34H[?12l[?25h[?25l[5;29r[5;1H[L[1;30r[1;3H[38;5;130m1 [m   [38;5;130mfor[m (;;) [106m{[m[1;18H[K[2;3H[38;5;130m2[m[7C[32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[3;3H[38;5;130m3[7Cif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[3;36H[K[4;3H[38;5;130m4[m[4C   [103mls_output[m.append (buffer);
[38;5;130m 65 [m   [106m}[1;17H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 60 [m   [32mchar[m buffer[[31m0x1000[m];[2;17H{[6;8H}[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 59 [m   string [103mls_output[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 58 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 57 [m      [38;5;130mreturn[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 56 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 55 [m      header.nbytes = htonl (errno);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 54 [m      header.command = cxi_command::NAK;[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 53 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 52 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 51 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 50 [m   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm "[m + header.filename;[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 49 [m   exit([31m0[m);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 48 [m   cout << header.filename;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 45 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << [103mls_output[m.size() << [31m" bytes"[m);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 43 [m   send_packet (client_sock, [103mls_output[m.c_str(), [103mls_output[m.size());[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 39 [m   header.nbytes = htonl ([103mls_output[m.size());[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 38 [m   header.command = cxi_command::LSOUT;[1;34H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 37 [m   pclose (ls_pipe);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 36 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 35 [m      [103mls_output[m.append (buffer);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 34 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 33 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[1;34H[?12l[?25h[?25l[5;29r[5;1H[L[1;30r[1;3H[38;5;130m2 [m   [38;5;130mfor[m (;;) [106m{[m[1;18H[K[2;3H[38;5;130m3[m[7C[32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[3;3H[38;5;130m4[7Cif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[3;36H[K[4;3H[38;5;130m5[m[4C   [103mls_output[m.append (buffer);
[38;5;130m 36 [m   [106m}[1;17H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 31 [m   [32mchar[m buffer[[31m0x1000[m];[2;17H{[6;8H}[1;27H[?12l[?25h[?25l[2;17H[106m{[6;8H}[2;17H[?12l[?25h[?25l[m{[6;8H}[3;34H[?12l[?25h[4;34H[5;34H[?25l[2;17H[106m{[6;8H}[?12l[?25h[?25l[m[2;17H{[6;8H}[7;24H[?12l[?25h[8;34H[9;34H[10;34H[11;34H[12;34H[13;34H[14;34H[15;5H[16;5H[17;34H[18;31H[19;15H[20;34H[21;34H[22;33H[23;34H[24;34H[25;34H[26;34H[27;17H[?25l[22;32H[106m{[28;8H}[?12l[?25h[?25l[m[22;32H{[28;8H}[29;24H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 60 [m   [32mchar[m buffer[[31m0x1000[m];[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 61 [m   [38;5;130mfor[m (;;) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 62 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 63 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 64 [m      [103mls_output[m.append (buffer);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[25;17H[106m{[m[29;1H[38;5;130m 65 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[24;17H{[28;8H}
[38;5;130m 66 [m   pclose (ls_pipe);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 67 [m   header.command = cxi_command::ACK;[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 68 [m   header.nbytes = htonl ([103mls_output[m.size());[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 69 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 70 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 71 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 72 [m   send_packet (client_sock, rm_output.c_str(), rm_output.size());[29;34H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 73 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << rm_output.size() << [31m" bytes"[m);[29;34H[?12l[?25h[28;34H[27;34H[26;34H[25;34H[24;34H[23;34H[22;24H[?25l[17;17H[106m{[21;8H}[?12l[?25h[?25l[m[17;17H{[21;8H}[20;34H[?12l[?25h[19;34H[18;34H[?25l[17;17H[106m{[21;8H}[17;17H[?12l[?25h[?25l[m{[21;8H}[16;27H[?12l[?25h[15;24H[?25l[30;1H[1m-- INSERT (paste) --[15;17H[?12l[?25h[?25l[ml_output;[15;24H[K[15;16H[?12l[?25h[?25l_output;[15;23H[K[15;15H[?12l[?25h[?25lr_output;[15;16H[?12l[?25h[?25lm_output;[15;17H[?12l[?25h[30;1H[K[15;16H[?25l[?12l[?25h[16;16H[17;16H[18;16H[19;16H[20;16H[?25l[17;17H[106m{[21;8H}[?12l[?25h[?25l[m[17;17H{[21;8H}[22;16H[?12l[?25h[23;16H[24;16H[25;16H[26;16H[27;16H[28;16H[29;16H[?25l[1;29r[29;1H
[1;30r[2;70H[106m{[m[29;1H[38;5;130m 74 [m[106m}[?12l[?25h[?25l[m[1;3H[38;5;130m7[m[1C[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[2;3H[38;5;130m8[m[1C   cout << header.filename;[2;32H[K[3;3H[38;5;130m9[m[4Cexit([31m0[m);[3;16H[K[4;2H[38;5;130m50[m[4C[32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm "[m + header.filename;[5;3H[38;5;130m1[m[4C[32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r[m[1C);[5;45H[K[6;3H[38;5;130m2 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) { [6;34H[K[7;3H[38;5;130m3[m[4C   outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[8;3H[38;5;130m4[m[7Cheader.command = cxi_command::NAK;[8;45H[K[9;3H[38;5;130m5[m[14Cnbytes = htonl (errno);[9;41H[K[10;3H[38;5;130m6[m[7Csend_packet (client_sock, &header, [38;5;130msizeof[m header);[11;3H[38;5;130m7[7Creturn[m;[11;18H[K[12;3H[38;5;130m8[m[4C}[12;11H[K[13;3H[38;5;130m9[m[4Cstring rm_output;[14;2H[38;5;130m60[m[4C[32mchar[m buffer[[31m0x1000[m];[15;3H[38;5;130m1 [m   [38;5;130mfor[m (;;) {[15;18H[K[16;3H[38;5;130m2[m[4C   [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[17;3H[38;5;130m3[7Cif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[17;37H[K[18;3H[38;5;130m4[m[7C[103mls_output[m.append (buffer);[19;3H[38;5;130m5[m[4C}[19;11H[K[20;3H[38;5;130m6[m[4Cpclose (ls_pipe);[21;3H[38;5;130m7[m[4Cheader.command = cxi_command::ACK;[22;3H[38;5;130m8[m[11Cnbytes = htonl ([103mls_output[m.size());[23;3H[38;5;130m9[m[4Cmemset (header.filename, [31m0[m, FILENAME_SIZE);[24;2H[38;5;130m70[m[4CDEBUGF ([31m'h'[m, [31m"sending header "[m << header);[24;50H[K[25;3H[38;5;130m1[m[4Csend_packet (client_sock, &header, [38;5;130msizeof[m header);[26;3H[38;5;130m2[m[30Crm_output.c_str(), rm_output.size());[27;3H[38;5;130m3[m[4CDEBUGF ([31m'h'[m, [31m"sent "[m << rm_output.size() << [31m" bytes"[m);[27;62H[K[28;3H[38;5;130m4[m[1C}[28;8H[K[29;3H[38;5;130m5[m[29;5H[K[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 76 [m[32mvoid[m run_server (accepted_socket& client_sock) {[29;16H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 77 [m   outlog.execname (outlog.execname() + [31m"*"[m);[29;16H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 78 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[29;16H[?12l[?25h[28;16H[27;16H[26;5H[25;5H[24;16H[23;16H[22;16H[21;16H[20;16H[19;16H[18;16H[17;16H[?25l[12;17H[106m{[16;8H}[?12l[?25h[?25l[m[12;17H{[16;8H}[15;16H[?12l[?25h[1C[1C[?25l[30;1H[1m-- INSERT (paste) --[15;13H[?12l[?25h[?25l[ml_output.append (buffer);[15;36H[K[15;12H[?12l[?25h[?25l_output.append (buffer);[15;35H[K[15;11H[?12l[?25h[?25lr_output.append (buffer);[15;12H[?12l[?25h[?25lm_output.append (buffer);[15;13H[?12l[?25h[30;1H[K[15;12H[?25l[?12l[?25h[?25l[12;17H[106m{[16;8H}[?12l[?25h[?25l[m[12;17H{[16;8H}[17;12H[?12l[?25h[?25l[12;17H[106m{[16;8H}[?12l[?25h[?25l[m[12;17H{[16;8H}[15;12H[?12l[?25h[14;12H[13;12H[14;12H[15;12H[?25l[12;17H[106m{[16;8H}[?12l[?25h[?25l[m[12;17H{[16;8H}[17;12H[?12l[?25h[18;12H[19;12H[20;12H[21;12H[22;12H[21;12H[20;12H[19;12Her.nbytes = htonl[?25l [106m([16C)[19;30H[?12l[?25h[?25l[m([16C)[19;31H[?12l[?25h[1C[1C[?25l[30;1H[1m-- INSERT (paste) --[19;33H[?12l[?25h[?25l[ml_output.size());[19;48H[K[19;32H[?12l[?25h[?25l_output.size());[19;47H[K[19;30H[106m([14C)[19;31H[?12l[?25h[?25l[mr_output.size([1C);[19;30H([14C)[19;32H[?12l[?25h[?25lm_output.size());[19;33H[?12l[?25h[30;1H[K[19;32H[?25l[?12l[?25h[20;32H[21;32H[22;32H[23;32H[24;32H[25;5H[26;5H[27;32H[28;32H[29;32H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 79 [m   [38;5;130mtry[m {  [?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 80 [m      [38;5;130mfor[m (;;) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 81 [m[9Ccxi_header header;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 82 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 83 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 84 [9Cswitch[m (header.command) {[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 85 [12Ccase[m cxi_command::LS:[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 86 [m[15Creply_ls (client_sock, header);[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 87 [15Cbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 88 [12Ccase[m cxi_command::RM:[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 89 [m[15Creply_rm (client_sock, header);[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 90 [15Cbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 91 [12Cdefault[m:[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 92 [m[15Coutlog << [31m"invalid client header:"[m << header << endl;[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 93 [15Cbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[19;38H[106m{[m[29;1H[38;5;130m 94 [m[9C[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[14;20H[106m{[m[18;38H{[28;14H}
[38;5;130m 95 [m      [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[13;20H{[28;11H}
[38;5;130m 96 [m   }[38;5;130mcatch[m (socket_error& error) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 97 [m      outlog << error.what[106m()[m << endl;[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[28;31H()
[38;5;130m 98 [m   }[38;5;130mcatch[m (cxi_exit& error) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 99 [m      DEBUGF ([31m'x'[m, [31m"caught cxi_exit"[m);[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[27;33H[106m{[m

[38;5;130m100 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[26;33H{[28;8H}
[38;5;130m101 [m   [38;5;130mthrow[m cxi_exit();[?12l[?25h[?25l[1;29r[29;1H
[1;30r[3;52H[106m{[m[29;1H[38;5;130m102 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[2;52H{[28;5H}
[38;5;130m103 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m104 [m[32mvoid[m fork_cxiserver (server_socket& server, accepted_socket& accept) {[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m105 [m   pid_t pid = fork();[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m106 [m   [38;5;130mif[m (pid == [31m0[m) { [34m// child[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m107 [m      server.close();[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m108 [m      run_server (accept);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m109 [m      [38;5;130mthrow[m cxi_exit();[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m110 [m   }[38;5;130melse[m {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m111 [m      accept.close();[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m112 [m      [38;5;130mif[m (pid < [31m0[m) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m113 [m[9Coutlog << [31m"fork failed: "[m << strerror (errno) << endl;[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m114 [m      }[38;5;130melse[m {[?12l[?25h[28;32H[?25l[27;24H[106m{[29;11H}[27;24H[?12l[?25h[?25l[m{[29;11H}[26;25H[?12l[?25h[25;14H[24;27H[23;30H[22;25H[21;31H[20;26H[19;32H[18;5H[17;5H[16;24H[?25l[13;33H[106m{[15;8H}[?12l[?25h[?25l[m[13;33H{[15;8H}[14;32H[?12l[?25h[13;32H[?25l[12;31H[106m()[?12l[?25h[?25l[m()[11;32H[?12l[?25h[10;11H[9;14H[8;25H[7;32H[6;24H[5;25H[4;32H[3;32H[2;25H[1;32H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 85 [12Ccase[m cxi_command::LS:[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 84 [9Cswitch[m (header.command) {[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 83 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 82 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 81 [m[9Ccxi_header header;[?12l[?25h[?25l[16;29r[16;1H[L[1;30r[1;3H[38;5;130m0[7Cfor[m (;;) [106m{[m[1;21H[K[2;3H[38;5;130m1[m[10Ccxi_header header; [2;33H[K[3;3H[38;5;130m2[m[10Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[4;3H[38;5;130m3[m[10CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[5;3H[38;5;130m4[10Cswitch[m (header.command) {[6;3H[38;5;130m5[13Ccase[m cxi_command::LS: [6;39H[K[7;3H[38;5;130m6[m[16Creply_ls (client_sock, header);[8;3H[38;5;130m7[m[13C   [38;5;130mbreak[m;[8;26H[K[9;3H[38;5;130m8[13Ccase[m cxi_command::RM: [9;39H[K[10;2H[38;5;130m89[m[16Creply_rm (client_sock, header);[11;3H[38;5;130m0[m[13C   [38;5;130mbreak[m;[12;3H[38;5;130m1[13Cdefault[m:[12;25H[K[13;3H[38;5;130m2[m[16Coutlog << [31m"invalid client header:"[m << header << endl;[14;3H[38;5;130m3[m[10C      [38;5;130mbreak[m;[15;3H[38;5;130m4[m[7C   }
[38;5;130m 95 [m      [106m}[1;20H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 79 [m   [38;5;130mtry[m {[2;20H{[17;11H}[1;15H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 78 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 77 [m   outlog.execname (outlog.execname() + [31m"*"[m);[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 76 [m[32mvoid[m run_server (accepted_socket& client_sock) {[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 75 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 74 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 73 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << rm_output.size() << [31m" bytes"[m);[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 72 [m   send_packet (client_sock, rm_output.c_str(), rm_output.size());[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 71 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 70 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 69 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 68 [m   header.nbytes = htonl (rm_output.size());[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 67 [m   header.command = cxi_command::ACK;[1;32H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 66 [m   pclose (ls_pipe);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 65 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 64 [m      rm_output.append (buffer);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 63 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 62 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[1;32H[?12l[?25h[?25l[5;29r[5;1H[L[1;30r[1;3H[38;5;130m1 [m   [38;5;130mfor[m (;;) [106m{[m[1;18H[K[2;3H[38;5;130m2[m[7C[32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[3;3H[38;5;130m3[7Cif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[3;36H[K[4;3H[38;5;130m4[m[4C   rm_output.append (buffer);
[38;5;130m 65 [m   [106m}[1;17H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 60 [m   [32mchar[m buffer[[31m0x1000[m];[2;17H{[6;8H}[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 59 [m   string rm_output;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 58 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 57 [m      [38;5;130mreturn[m;[?12l[?25h[2;8H[3;24H[4;27H[?25l[5;17H[106m{[9;8H}[5;17H[?12l[?25h[?25l[m{[9;8H}[6;32H[?12l[?25h[7;32H[8;32H[?25l[5;17H[106m{[9;8H}[?12l[?25h[?25l[m[5;17H{[9;8H}[10;24H[?12l[?25h[11;32H[12;32H[13;32H[14;32H[15;32H[16;32H[17;32H[18;5H[19;5H[20;32H[21;32H[22;32H[23;15H[24;20H[25;32H[26;32H[27;32H[28;32H[29;32H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 86 [m[15Creply_ls (client_sock, header);[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 87 [15Cbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 88 [12Ccase[m cxi_command::RM:[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 89 [m[15Creply_rm (client_sock, header);[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 90 [15Cbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 91 [12Cdefault[m:[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 92 [m[15Coutlog << [31m"invalid client header:"[m << header << endl;[29;32H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 93 [15Cbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[19;38H[106m{[m[29;1H[38;5;130m 94 [m[9C[106m}[?12l[?25h[?25l[m
1 change; before #8  16 seconds ago[3;31H[103mls_output[m[19;38H{[29;14H}[3;33H[?12l[?25h[?25l[30;19H7  25[1;3H[38;5;130m4[m[4C   [103mls_output[m.append (buffer);[2;3H[38;5;130m5[m[4C}[2;9H[K[3;3H[38;5;130m6[m[4Cpclose (ls_pipe);[3;25H[K[4;3H[38;5;130m7[m[4Cheader.command = cxi_command::ACK;[4;42H[K[5;2H[38;5;130m68[m[4Cheader.nbytes = htonl ([103mls_output[m.size());[5;49H[K[6;2H[38;5;130m69[m[4Cmemset (header.filename, [31m0[m, FILENAME_SIZE);[6;51H[K[7;3H[38;5;130m0[m[4CDEBUGF ([31m'h'[m, [31m"sending header "[m << header);[7;50H[K[8;3H[38;5;130m1[m[4Csend_packet (client_sock, &header, [38;5;130msizeof[m header);[8;58H[K[9;3H[38;5;130m2[m[1C   send_packet (client_sock, rm_output.c_str(), rm_output.size());[10;3H[38;5;130m3[m[4CDEBUGF ([31m'h'[m, [31m"sent "[m << rm_output.size() << [31m" bytes"[m);[11;3H[38;5;130m4[m[1C}[11;6H[K[12;3H[38;5;130m5[m[12;8H[K[13;3H[38;5;130m6[m[1C[32mvoid[m run_server (accepted_socket& client_sock) {[13;53H[K[14;3H[38;5;130m7[m[4Coutlog.execname (outlog.execname() + [31m"*"[m);[15;2H[38;5;130m78[m[4Coutlog << [31m"connected to "[m << to_string (client_sock) << endl;[16;2H[38;5;130m79 [m   [38;5;130mtry[m {   [16;16H[K[17;3H[38;5;130m0[7Cfor[m (;;) {[17;21H[K[18;3H[38;5;130m1[m[10Ccxi_header header; [18;33H[K[19;3H[38;5;130m2[m[10Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[20;3H[38;5;130m3[m[10CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[21;3H[38;5;130m4[10Cswitch[m (header.command) {[21;39H[K[22;3H[38;5;130m5[13Ccase[m cxi_command::LS:[23;3H[38;5;130m6[m[13C   reply_ls (client_sock, header);[24;3H[38;5;130m7[16Cbreak[m;[24;26H[K[25;2H[38;5;130m88[13Ccase[m cxi_command::RM:[26;2H[38;5;130m89[m[13C   reply_rm (client_sock, header);[27;3H[38;5;130m0[16Cbreak[m;[27;27H[K[28;3H[38;5;130m1[13Cdefault[m:[28;25H[K[29;3H[38;5;130m2[m[10C      outlog << [31m"invalid client header:"[m << header << endl;[1;13H[?12l[?25h[?25l[30;19H6  37[1;2H[38;5;130m59[m[4Cstring [103mls_output[m;[1;25H[K[2;3H[38;5;130m0[m[4C[32mchar[m buffer[[31m0x1000[m];[3;3H[38;5;130m1 [m   [38;5;130mfor[m (;;) {[3;18H[K[4;3H[38;5;130m2[m[4C   [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[5;3H[38;5;130m3[m[4C   [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[5;36H[K[6;3H[38;5;130m4[m[4C   [103mls_output[m.append (buffer);[6;37H[K[7;2H[38;5;130m65[m[4C}[7;9H[K[8;2H[38;5;130m66[m[4Cpclose (ls_pipe);[8;25H[K[9;2H[38;5;130m67[m[4Cheader.command = cxi_command::ACK;[9;42H[K[10;2H[38;5;130m68[m[4Cheader.nbytes = htonl ([103mls_output[m.size());[10;49H[K[11;2H[38;5;130m69[m[1C   memset (header.filename, [31m0[m, FILENAME_SIZE);[12;3H[38;5;130m0[m[4CDEBUGF ([31m'h'[m, [31m"sending header "[m << header);[13;3H[38;5;130m1[m[1C   send_packet (client_sock, &header, [38;5;130msizeof[m header);[14;3H[38;5;130m2[m[4Csend_packet (client_sock, rm_output.c_str(), rm_output.size());[15;3H[38;5;130m3[m[4CDEBUGF ([31m'h'[m, [31m"sent "[m << rm_output.size() << [31m" bytes"[m);[15;62H[K[16;3H[38;5;130m4[m[1C}[16;8H[K[17;2H[38;5;130m75[m[17;11H[K[18;2H[38;5;130m76[m[1C[32mvoid[m run_server (accepted_socket& client_sock) {[19;2H[38;5;130m77[m[4Coutlog.execname (outlog.execname() + [31m"*"[m);[19;50H[K[20;2H[38;5;130m78[m[4Coutlog << [31m"connected to "[m << to_string (client_sock) << endl;[21;2H[38;5;130m79 [m   [38;5;130mtry[m {   [21;16H[K[22;3H[38;5;130m0[7Cfor[m (;;) {[22;22H[K[23;3H[38;5;130m1[m[10Ccxi_header header; [23;33H[K[24;3H[38;5;130m2[m[10Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[25;3H[38;5;130m3[m[10CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[26;3H[38;5;130m4[10Cswitch[m (header.command) {[26;39H[K[27;2H[38;5;130m85[13Ccase[m cxi_command::LS:[28;2H[38;5;130m86[m[13C   reply_ls (client_sock, header);[29;2H[38;5;130m87[16Cbreak[m;[29;27H[K[1;17H[?12l[?25h[?25l[30;11Hafter #6  40 seconds ago[30;35H[K[1;15Hrm_output[1;17H[?12l[?25h[?25l[30;18H7  29[6;11Hrm_output[6;13H[?12l[?25h[?25l[30;18H8  22[10;31Hrm_output[10;33H[?12l[?25h[11;33H[10;33H[9;33H[8;24H[?25l[3;17H[106m{[7;8H}[?12l[?25h[?25l[m[3;17H{[7;8H}[6;33H[?12l[?25h[5;33H[4;33H[?25l[3;17H[106m{[7;8H}[3;17H[?12l[?25h[?25l[m{[7;8H}[2;27H[?12l[?25h[1;24H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 58 [m   }[30;1H[K[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 57 [m      [38;5;130mreturn[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 56 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 55 [m      header.nbytes = htonl [106m([merrno[106m)[m;[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 54 [m      header.command = cxi_command::NAK;[2;33H(errno)[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 53 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 52 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 51 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 50 [m   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[106m[][m = [31m"rm "[m + header.filename;[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 49 [m   exit([31m0[m);[2;32H[][1;15H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 48 [m   cout << header.filename;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 45 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << [103mls_output[m.size() << [31m" bytes"[m);[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 43 [m   send_packet (client_sock, [103mls_output[m.c_str(), [103mls_output[m.size());[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 39 [m   header.nbytes = htonl ([103mls_output[m.size());[1;33H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 38 [m   header.command = cxi_command::LSOUT;[1;33H[?12l[?25h[?25l[30;1H:[?12l[?25hn[?25l[?12l[?25ho[?25l[?12l[?25hh[?25l[?12l[?25h[?25l[2;31Hls_output[6;34Hls_output[10Cls_output[7;32Hls_output[1;33H[?12l[?25h[2;33H[3;33H[4;33H[5;33H[6;33H[7;33H[8;5H[9;5H[10;33H[11;31H[12;15H[?25l[13;32H[106m[][?12l[?25h[?25l[m[][?12l[?25h = [1C[1C[1C[1C[1C + [12;15H[?25l[30;1H[1m-- INSERT (paste) --[12;15H[?12l[?25h[m;[?25l[13;8H[K[14;8H[32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm [m[1C + header.filename;[15;8H[32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);[16;8H[38;5;130mif[m (ls_pipe == [31mnullptr[m) { [16;34H[K[17;11Houtlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[18;18Hcommand = cxi_command::NAK;[19;11Hheader.nbytes = htonl (errno);[19;41H[K[20;11Hsend_packet (client_sock, &header, [38;5;130msizeof[m header);[21;8H   [38;5;130mreturn[m;[22;8H}[22;9H[K[23;8Hstring rm_output;[23;25H[K[24;8H[32mchar[m buffer[[31m0x1000[m];[25;8H[38;5;130mfor[m (;;) {[25;18H[K[26;11H[32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[27;11H[38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[27;36H[K[28;8H   rm_output.append (buffer);[29;8H}[29;9H[K[13;5H[?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25lc[?12l[?25h[?25lh[?12l[?25h[?25la[?12l[?25h[?25l[32mchar[?12l[?25h[?25l[m [?12l[?25h[?25lr[?12l[?25h[?25lm[?12l[?25h[?25l[[14;60H[97m[101m;[15;43H;[16;32H{[17;63H;[18;44H;[19;40H;[20;60H;[21;17H;[22;8H}[23;24H;[24;27H;[25;17H{[26;60H;[27;35H;[28;36H;[29;8H}[13;16H[?12l[?25h[?25l[m[31m4[?12l[?25h[?25l[m][14;60H;[15;43H;[16;32H{[17;63H;[18;44H;[19;40H;[20;60H;[21;17H;[22;8H}[23;24H;[24;27H;[25;17H{[26;60H;[27;35H;[28;36H;[29;8H}[13;15H[106m[[1C][?12l[?25h[?25l[m[[1C] [?12l[?25h[?25l=[?12l[?25h[?25l [?12l[?25h[?25l[31m"[?12l[?25h[?25lr[?12l[?25h[?25lm[?12l[?25h[?25l [?12l[?25h[?25l[m[35m\[m[14;5H[31m   static const char rm_cmd[] = [m[1Crm [1C[31m + header.filename;[13;26H[?12l[?25h[?25l[m[35m0[?12l[?25h[?25l[m[31m"[m[14;5H   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [1C[31mrm [m[1C + header.filename;[13;28H[?12l[?25h[?25l;[?12l[?25h[30;1H[K[13;28H[?25l[?12l[?25h[14;28H_cm[?25ld[106m[][?12l[?25h[?25l[[?12l[?25h[?25l[m[][?12l[?25h = [1C[1C[1C[1C[1C[?25l[30;1H[1m-- INSERT (paste) --[14;42H[?12l[?25h[?25l[m[31m + header.filename;[m[14;60H[K[14;41H[?12l[?25h[?25l[31m+ header.filename;[m[14;59H[K[14;40H[?12l[?25h[?25l[31m + header.filename;[m[14;58H[K[14;39H[?12l[?25h[?25l[31m + header.filename;[m[14;57H[K[14;38H[?12l[?25h[?25l + header.filename;[14;56H[K[14;37H[?12l[?25h[?25lr + header.filename;[14;38H[?12l[?25h[?25lm + header.filename;[14;39H[?12l[?25h[30;1H[K[14;38H[?25l[?12l[?25h[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"cxid.cpp" 211L, 6170C written
[?1l>[?12l[?25h[?1049lbash-4.2$ clear
[3;J[H[2Jbash-4.2$ make
checksource cxid.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl cxid.cpp
Done processing cxid.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxid.cpp
cxid.cpp: In function â€˜void reply_rm(accepted_socket&, cxi_header&)â€™:
cxid.cpp:50:17: error: initializer-string for â€˜char [4]â€™ is too long []8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive-fpermissive]8;;]
   50 |    char rm[4] = "rm \0";
      |                 ^~~~~~~
cxid.cpp:51:36: error: invalid operands of types â€˜char [4]â€™ and â€˜char [59]â€™ to binary â€˜operator+â€™
   51 |    static const char rm_cmd[] = rm + header.filename;
      |                                 ~~ ^ ~~~~~~~~~~~~~~~
      |                                 |           |
      |                                 char [4]    char [59]
make: *** [Makefile:41: cxid.o] Error 1
bash-4.2$ makeclearvim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 211L, 6170C[>c[1;1H[38;5;130m 37 [m   pclose (ls_pipe);
[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   [32mchar[m rm[[31m4[m] = [31m"rm [m[35m\0[m[31m"[m;
[38;5;130m 51 [m   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = rm + header.filename;
[38;5;130m 52 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);
[38;5;130m 53 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 54 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 55 [m      header.command = cxi_command::NAK;
[38;5;130m 56 [m      header.nbytes = htonl (errno);
[38;5;130m 57 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 58 [m      [38;5;130mreturn[m;
[38;5;130m 59 [m   }
[38;5;130m 60 [m   string rm_output;
[38;5;130m 61 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 62 [m   [38;5;130mfor[m (;;) {
[38;5;130m 63 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 64 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 65 [m      rm_output.append (buffer);[15;8H[?12l[?25h[1C[1C[1C[1C[1C[1C [1C[1C[1C[1C[1C [1C[1C[1C[1C rm_cm[?25ld[106m[][?12l[?25h[?25l[m[][14;28H[?12l[?25h[13;15H[14;28H[?25l[15;32H[106m[][?12l[?25h[?25l[m[][16;32H[?12l[?25h[?25l[15;32H[106m[][?12l[?25h[?25l[[?12l[?25h[?25l[m[][?12l[?25h [?25l[106m[][?12l[?25h[?25l[?12l[?25h[?25l[[?12l[?25h[?25l[m[30;1H[1m-- INSERT (paste) --[m[30;21H[K[15;33H[?12l[?25h[?25l[31m[106m1[m] = rm + header.filename;[15;33H[31m1[m[106m][?12l[?25h[?25l[m[31m[106m0[m] = rm + header.filename;[15;34H[31m0[m[106m][?12l[?25h[?25l[m[31m[106m0[m] = rm + header.filename;[15;35H[31m0[m[106m][?12l[?25h[?25l][?12l[?25h[?25l[m[[3C] [?12l[?25h= [?25lrm + header.filename;[15;60H[K[15;39H[?12l[?25h[?25lrm + header.filename;[15;59H[K[15;38H[?12l[?25h[?25lrm + header.filename;[15;58H[K[15;32H[106m[[3C][?12l[?25h[?25l[m;rm + header.filename;[15;32H[[3C];[?12l[?25h[?25l[15;38H[K[16;5Hrm + header.filename;[16;26H[K[17;8H[32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);[18;8H[38;5;130mif[m (ls_pipe == [31mnullptr[m) { [18;34H[K[19;11Houtlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[20;18Hcommand = cxi_command::NAK;[21;11Hheader.nbytes = htonl (errno);[21;41H[K[22;11Hsend_packet (client_sock, &header, [38;5;130msizeof[m header);[23;8H   [38;5;130mreturn[m;[24;8H}[24;9H[K[25;8Hstring rm_output;[25;25H[K[26;8H[32mchar[m buffer[[31m0x1000[m];[27;8H[38;5;130mfor[m (;;) {[27;18H[K[28;11H[32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[29;11H[38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[29;36H[K[16;5H[?12l[?25h[?25l rm + header.filename;[16;6H[?12l[?25h[?25l rm + header.filename;[16;7H[?12l[?25h[?25l rm + header.filename;[16;8H[?12l[?25hrm + [?25lkheader.filename;[16;14H[?12l[?25h[?25lheader.filename;[16;29H[K[16;13H[?12l[?25h[30;1H[K[16;12H[?25l[?12l[?25h[17;12H[16;12H[15;12H[1C[1C [1C[1C[1C[1C[1C [1C[1C[1C[1C rm_cm[?25ld[106m[[3C][?12l[?25h[?25l[m[[3C][?12l[?25h[1C[1C[?25l[106m[[3C][?12l[?25h[?25l[m[[3C][?12l[?25h[?25l[106m[[3C][?12l[?25h[?25l[m[[3C][16;28H[?12l[?25h[?25l[30;1H[1m-- INSERT (paste) --[16;12H[?12l[?25h[m [?25lheader.filename;[16;28H[K[16;12H[?12l[?25h[?25lheader.filename;[16;27H[K[16;11H[?12l[?25h[?25lheader.filename;[16;26H[K[16;10H[?12l[?25h[?25lheader.filename;[16;25H[K[16;9H[?12l[?25h[?25lheader.filename;[16;24H[K[16;8H[?12l[?25h[?25lsheader.filename;[16;9H[?12l[?25h[?25ltheader.filename;[16;10H[?12l[?25h[?25laheader.filename;[16;11H[?12l[?25h[?25ltheader.filename;[16;12H[?12l[?25h[?25liheader.filename;[16;13H[?12l[?25h[?25lcheader.filename;[16;14H[?12l[?25h[?25l_header.filename;[16;15H[?12l[?25h[?25lcheader.filename;[16;16H[?12l[?25h[?25laheader.filename;[16;17H[?12l[?25h[?25lsheader.filename;[16;18H[?12l[?25h[?25ltheader.filename;[16;19H[?12l[?25h[?25l[16;8H[38;5;130mstatic_cast[m<header.filename;[16;20H[?12l[?25h[?25lLheader.filename;[16;21H[?12l[?25h[?25lheader.filename;[16;36H[K[16;20H[?12l[?25h[?25l[16;8Hstatic_castheader.filename;[16;35H[K[16;19H[?12l[?25h[?25lheader.filename;[16;34H[K[16;18H[?12l[?25h[?25lheader.filename;[16;33H[K[16;17H[?12l[?25h[?25lheader.filename;[16;31H[K[16;15H[?12l[?25h[?25lheader.filename;[16;30H[K[16;14H[?12l[?25h[?25lheader.filename;[16;29H[K[16;13H[?12l[?25h[?25lheader.filename;[16;28H[K[16;12H[?12l[?25h[?25lheader.filename;[16;27H[K[16;11H[?12l[?25h[?25lheader.filename;[16;26H[K[16;10H[?12l[?25h[?25lheader.filename;[16;25H[K[16;9H[?12l[?25h[?25lheader.filename;[16;24H[K[16;8H[?12l[?25h[?25lsheader.filename;[16;9H[?12l[?25h[?25ltheader.filename;[16;10H[?12l[?25h[?25lrheader.filename;[16;11H[?12l[?25h[?25liheader.filename;[16;12H[?12l[?25h[?25lnheader.filename;[16;13H[?12l[?25h[?25lgheader.filename;[16;14H[?12l[?25h[?25l header.filename;[16;15H[?12l[?25h[?25lhheader.filename;[16;16H[?12l[?25h[?25lfheader.filename;[16;17H[?12l[?25h[?25lheader.filename;[16;32H[K[16;16H[?12l[?25h[?25leheader.filename;[16;17H[?12l[?25h[?25laheader.filename;[16;18H[?12l[?25h[?25ldheader.filename;[16;19H[?12l[?25h[?25lFheader.filename;[16;20H[?12l[?25h[?25liheader.filename;[16;21H[?12l[?25h[?25llheader.filename;[16;22H[?12l[?25h[?25leheader.filename;[16;23H[?12l[?25h[?25l header.filename;[16;24H[?12l[?25h[?25l=header.filename;[16;25H[?12l[?25h[?25l header.filename;[16;26H[?12l[?25hheader.filename;[30;1H[K[16;41H[?25l[?12l[?25h[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"cxid.cpp" 212L, 6188C written
[?1l>[?12l[?25h[?1049lbash-4.2$ make
checksource cxid.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl cxid.cpp
Done processing cxid.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxid.cpp
cxid.cpp: In function â€˜void reply_rm(accepted_socket&, cxi_header&)â€™:
cxid.cpp:50:17: error: initializer-string for â€˜char [4]â€™ is too long []8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive-fpermissive]8;;]
   50 |    char rm[4] = "rm \0";
      |                 ^~~~~~~
cxid.cpp:51:22: error: uninitialized â€˜const rm_cmdâ€™ []8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive-fpermissive]8;;]
   51 |    static const char rm_cmd[100];
      |                      ^~~~~~
cxid.cpp:50:9: warning: unused variable â€˜rmâ€™ []8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable-Wunused-variable]8;;]
   50 |    char rm[4] = "rm \0";
      |         ^~
make: *** [Makefile:41: cxid.o] Error 1
bash-4.2$ makevim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 212L, 6188C[>c[1;1H[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   [32mchar[m rm[[31m4[m] = [31m"rm [m[35m\0[m[31m"[m;
[38;5;130m 51 [m   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[[31m100[m];
[38;5;130m 52 [m   string headFile = header.filename;
[38;5;130m 53 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);
[38;5;130m 54 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 55 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 56 [m      header.command = cxi_command::NAK;
[38;5;130m 57 [m      header.nbytes = htonl (errno);
[38;5;130m 58 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 59 [m      [38;5;130mreturn[m;
[38;5;130m 60 [m   }
[38;5;130m 61 [m   string rm_output;
[38;5;130m 62 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 63 [m   [38;5;130mfor[m (;;) {
[38;5;130m 64 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 65 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 66 [m      rm_output.append (buffer);[15;8H[?12l[?25h[14;8H[1C[?25lstring headFile = header.filename;[15;8H[32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);[16;8H[38;5;130mif[m (ls_pipe == [31mnullptr[m) { [16;34H[K[17;8H   outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[18;11Hheader.command = cxi_command::NAK;[18;45H[K[19;18Hnbytes = htonl (errno);[19;41H[K[20;11Hsend_packet (client_sock, &header, [38;5;130msizeof[m header);[21;11H[38;5;130mreturn[m;[21;18H[K[22;8H}[22;11H[K[23;8Hstring rm_output;[24;8H[32mchar[m buffer[[31m0x1000[m];[25;8H[38;5;130mfor[m (;;) {[25;18H[K[26;8H   [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[27;11H[38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[27;37H[K[28;11Hrm_output.append (buffer);[29;8H}[29;11H[K[14;8H[?12l[?25h[15;8H[?25l[32mstatic[m [32mconst[m [32mchar[m rm_cmd[[31m100[m];[15;39H[K[16;8H[32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);[17;8H[38;5;130mif[m (ls_pipe == [31mnullptr[m) { [17;34H[K[18;11Houtlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[19;18Hcommand = cxi_command::NAK;[20;11Hheader.nbytes = htonl (errno);[20;41H[K[21;11Hsend_packet (client_sock, &header, [38;5;130msizeof[m header);[22;8H   [38;5;130mreturn[m;[23;8H}[23;9H[K[24;8Hstring rm_output;[24;25H[K[25;8H[32mchar[m buffer[[31m0x1000[m];[26;8H[38;5;130mfor[m (;;) {[26;18H[K[27;11H[32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[28;11H[38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[28;36H[K[29;8H   rm_output.append (buffer);[15;8H[?12l[?25h[1C[1C[1C[1C[1C[1C [1C[1C[1C[1C[1C [1C[1C[1C[1C rm_cm[?25ld[106m[[3C][?12l[?25h[?25l[m[[3C][?12l[?25h[1C[1C[?25l[106m[[3C][?12l[?25h[?25l[m[[3C][?12l[?25h[?25l[30;1H[1m-- INSERT (paste) --[m[30;21H[K[15;37H[?12l[?25h[?25l[97m[101m;[m[15;37H[K[16;43H[97m[101m;[17;32H{[18;63H;[19;44H;[20;40H;[21;60H;[22;17H;[23;8H}[24;24H;[25;27H;[26;17H{[27;60H;[28;35H;[29;36H;[15;36H[?12l[?25h[?25l;[m[15;36H[K[15;35H[?12l[?25h[?25l[97m[101m;[m[15;35H[K[15;34H[?12l[?25h[?25l[97m[101m;[m[15;34H[K[15;33H[?12l[?25h[?25l];[16;43H;[17;32H{[18;63H;[19;44H;[20;40H;[21;60H;[22;17H;[23;8H}[24;24H;[25;27H;[26;17H{[27;60H;[28;35H;[29;36H;[15;32H[106m[][?12l[?25h[?25l[m ;[] [?12l[?25h[?25l=;[?12l[?25h[?25l ;[?12l[?25h[14;37H[13;29H[?25l[31mi"[m;[?12l[?25h[?25l[31m"[m;[13;29H[K[13;27H[?12l[?25h[?25l[35m"[m[31m;[m[13;28H[K[13;26H[?12l[?25h[?25l[31m"[m;[13;27H[K[13;25H[?12l[?25h[?25l[31m"[m;[13;26H[K[13;24H[?12l[?25h[?25l[31m "[m;[?12l[?25h=[30;1H[K[13;19H[?25l[?12l[?25h[14;19H[15;19H[1C [1C[1C[1C[1C rm_cm[?25ld[106m[][?12l[?25h[?25l[[?12l[?25h[?25l[m[][?12l[?25h = [?25l[30;1H[1m-- INSERT (paste) --[15;37H[?12l[?25h[?25l[m[31m";[?12l[?25h[?25lr;[?12l[?25h[?25lm;[?12l[?25h[?25l ;[?12l[?25h[?25l"[m;[?12l[?25h[?25l ;[?12l[?25h[?25l+;[?12l[?25h[?25l ;[?12l[?25h[?25lh;[?12l[?25h[?25le;[?12l[?25h[?25la;[?12l[?25h[?25ld;[?12l[?25h[?25lF;[?12l[?25h[?25li;[?12l[?25h[?25ll;[?12l[?25h[?25le;[?12l[?25h[30;1H[K[15;52H[?25l[?12l[?25h[14;41H[13;26H[14;41H[15;52He[?25l[30;1H[1m-- INSERT (paste) --[15;53H[?12l[?25h[?25l[m ;[?12l[?25h[?25l[31m";[?12l[?25h[?25l[m;[15;55H[K[15;54H[?12l[?25h[?25l+;[?12l[?25h[?25l ;[?12l[?25h[?25l[31m";[?12l[?25h[?25l[m[35m\;[m[16;5H[31m   FILE* ls_pipe = popen (rm_cmd, [m[1Cr[1C[31m);[15;58H[?12l[?25h[?25l[m[35m0[m[31m;[m[16;5H   [32mFILE[m* ls_pipe = popen (rm_cmd, [1C[31mr[m[1C);[15;59H[?12l[?25h[?25l[31m"[m;[?12l[?25h[14;42H[13;27H[30;1H[K[13;26H[?25l[?12l[?25h[?25l[13;8Hstring headFile = header.filename;[14;8H[32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;8H[32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r[m[1C);[15;45H[K[16;8H[38;5;130mif[m (ls_pipe == [31mnullptr[m) { [16;34H[K[17;8H   outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[18;11Hheader.command = cxi_command::NAK;[18;45H[K[19;18Hnbytes = htonl (errno);[19;41H[K[20;11Hsend_packet (client_sock, &header, [38;5;130msizeof[m header);[21;11H[38;5;130mreturn[m;[21;18H[K[22;8H}[22;11H[K[23;8Hstring rm_output;[24;8H[32mchar[m buffer[[31m0x1000[m];[25;8H[38;5;130mfor[m (;;) {[25;18H[K[26;8H   [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[27;11H[38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[27;37H[K[28;11Hrm_output.append (buffer);[29;8H}[29;11H[K[13;8H[?12l[?25h[14;8H[1C[1C[1C[1C[1C[1C [1C[1C[1C[1C[1C [1C[1C[1C[1C rm_cm[?25ld[106m[][?12l[?25h[?25l[[?12l[?25h[?25l[m[][?12l[?25h = [1C[1C[1C[1C[1C + +[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"cxid.cpp" 211L, 6186C written
[?1l>[?12l[?25h[?1049lbash-4.2$ clear
[3;J[H[2Jbash-4.2$ make
checksource cxid.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl cxid.cpp
Done processing cxid.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxid.cpp
cxid.cpp: In function â€˜void reply_rm(accepted_socket&, cxi_header&)â€™:
cxid.cpp:51:50: error: initializer fails to determine size of â€˜rm_cmdâ€™
   51 |    static const char rm_cmd[] = "rm " + headFile + "\0";
      |                                 ~~~~~~~~~~~~~~~~~^~~~~~
cxid.cpp:51:50: error: array must be initialized with a brace-enclosed initializer
make: *** [Makefile:41: cxid.o] Error 1
bash-4.2$ makeclearvim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 211L, 6186C[>c[1;1H[38;5;130m 37 [m   pclose (ls_pipe);
[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   string headFile = header.filename;
[38;5;130m 51 [m   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;
[38;5;130m 52 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);
[38;5;130m 53 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 54 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 55 [m      header.command = cxi_command::NAK;
[38;5;130m 56 [m      header.nbytes = htonl (errno);
[38;5;130m 57 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 58 [m      [38;5;130mreturn[m;
[38;5;130m 59 [m   }
[38;5;130m 60 [m   string rm_output;
[38;5;130m 61 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 62 [m   [38;5;130mfor[m (;;) {
[38;5;130m 63 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 64 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 65 [m      rm_output.append (buffer);[15;8H[?12l[?25h[16;8H[15;8H[14;8Hs[15;9H[1C[1C[1C[1C[1C [1C[1C[1C[1C[1C [1C[1C[1C[1C rm_cm[?25ld[106m[][?12l[?25h[?25l[[?12l[?25h[?25l[m[30;1H[1m-- INSERT (paste) --[m[30;21H[K[15;33H[?12l[?25h[?25l[31m[106m4[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;33H[31m4[m[106m][?12l[?25h[?25l+[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;34H+[106m][?12l[?25h[?25lh[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;35Hh[106m][?12l[?25h[?25le[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;36He[106m][?12l[?25h[?25la[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;37Ha[106m][?12l[?25h[?25ld[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;38Hd[106m][?12l[?25h[?25lF[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;39HF[106m][?12l[?25h[?25li[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;40Hi[106m][?12l[?25h[?25ll[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;41Hl[106m][?12l[?25h[?25le[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;42He[106m][?12l[?25h[?25l.[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;43H.[106m][?12l[?25h[?25ls[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;44Hs[106m][?12l[?25h[?25lt[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;45Ht[106m][?12l[?25h[?25lr[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;46Hr[106m][?12l[?25h[?25ll[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;47Hl[106m][?12l[?25h[?25le[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;48He[106m][?12l[?25h[?25ln[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;49Hn[106m][?12l[?25h[?25l([m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;50H([106m][?12l[?25h[?25l[m][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;78H[K[15;50H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;77H[K[15;49H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;76H[K[15;48H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;75H[K[15;47H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;74H[K[15;46H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;73H[K[15;45H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;72H[K[15;44H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;71H[K[15;43H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;70H[K[15;42H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;69H[K[15;41H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;68H[K[15;40H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;67H[K[15;39H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;66H[K[15;38H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;65H[K[15;37H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;64H[K[15;36H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;63H[K[15;35H[106m][m [?12l[?25h[?25l[106ms[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;35Hs[106m][?12l[?25h[?25lt[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;36Ht[106m][?12l[?25h[?25lr[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;37Hr[106m][?12l[?25h[?25ll[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;38Hl[106m][?12l[?25h[?25le[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;39He[106m][?12l[?25h[?25ln[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;40Hn[106m][?12l[?25h[?25l([m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;41H([106m][?12l[?25h[?25lh[me] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;42Hhe[106m][?12l[?25h[?25la[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;44Ha[106m][?12l[?25h[?25ld[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;45Hd[106m][?12l[?25h[?25lF[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;46HF[106m][?12l[?25h[?25li[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;47Hi[106m][?12l[?25h[?25ll[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;48Hl[106m][?12l[?25h[?25le[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;49He[106m][?12l[?25h[?25l)[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;50H)[106m][?12l[?25h[m[30;1H[K[15;50H[?25l[15;32H[[8C[106m([8C)[m][?12l[?25h[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"cxid.cpp" 211L, 6204C written
[?1l>[?12l[?25h[?1049lbash-4.2$ make
checksource cxid.cpp
checksource: line length > 72 characters
cxid.cpp: 1 errors: line 51
checksource: TOTAL COMPLAINTS: 1
make: [Makefile:39: cxid.o] Error 1 (ignored)
cpplint.py.perl cxid.cpp
cxid.cpp:51:  Lines should be <= 72 characters long  [whitespace/line_length] [2]
Done processing cxid.cpp
Total errors found: 1
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxid.cpp
cxid.cpp: In function â€˜void reply_rm(accepted_socket&, cxi_header&)â€™:
cxid.cpp:51:38: error: cannot convert â€˜std::stringâ€™ {aka â€˜std::basic_string<char>â€™} to â€˜const char*â€™
   51 |    static const char rm_cmd[4+strlen(headFile)] = "rm " + headFile + "\0";
      |                                      ^~~~~~~~
      |                                      |
      |                                      std::string {aka std::basic_string<char>}
In file included from /opt/rh/devtoolset-11/root/usr/include/c++/11/cstring:42,
                 from socket.h:6,
                 from protocol.h:9,
                 from cxid.cpp:14:
/usr/include/string.h:395:35: note:   initializing argument 1 of â€˜size_t strlen(const char*)â€™
  395 | extern size_t strlen (const char *__s)
      |                       ~~~~~~~~~~~~^~~
cxid.cpp:52:27: error: â€˜rm_cmdâ€™ was not declared in this scope; did you mean â€˜rcmdâ€™?
   52 |    FILE* ls_pipe = popen (rm_cmd, "r");
      |                           ^~~~~~
      |                           rcmd
make: *** [Makefile:41: cxid.o] Error 1
bash-4.2$ makevim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 211L, 6204C[>c[1;1H[38;5;130m 37 [m   pclose (ls_pipe);
[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   string headFile = header.filename;
[38;5;130m 51 [m   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[[31m4[m+strlen(headFile)] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;
[38;5;130m 52 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);
[38;5;130m 53 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 54 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 55 [m      header.command = cxi_command::NAK;
[38;5;130m 56 [m      header.nbytes = htonl (errno);
[38;5;130m 57 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 58 [m      [38;5;130mreturn[m;
[38;5;130m 59 [m   }
[38;5;130m 60 [m   string rm_output;
[38;5;130m 61 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 62 [m   [38;5;130mfor[m (;;) {
[38;5;130m 63 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 64 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 65 [m      rm_output.append (buffer);[15;8H[?12l[?25h[?25l[30;1H[K[30;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[30;1H[K[30;1H[?1l>[?12l[?25h[?1049lbash-4.2$ vim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 211L, 6204C[>c[1;1H[38;5;130m 37 [m   pclose (ls_pipe);
[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   string headFile = header.filename;
[38;5;130m 51 [m   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[[31m4[m+strlen(headFile)] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;
[38;5;130m 52 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);
[38;5;130m 53 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 54 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 55 [m      header.command = cxi_command::NAK;
[38;5;130m 56 [m      header.nbytes = htonl (errno);
[38;5;130m 57 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 58 [m      [38;5;130mreturn[m;
[38;5;130m 59 [m   }
[38;5;130m 60 [m   string rm_output;
[38;5;130m 61 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 62 [m   [38;5;130mfor[m (;;) {
[38;5;130m 63 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 64 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 65 [m      rm_output.append (buffer);[15;8H[?12l[?25h[1C[1C[1C[1C[1C[1C [1C[1C[1C[1C[1C [1C[1C[1C[1C rm_cm[?25ld[106m[[18C][15;32H[?12l[?25h[?25l[m[[18C][15;33H[?12l[?25h[1C+strle[?25ln[106m([8C)[15;41H[?12l[?25h[?25l[m([8C)[15;42H[?12l[?25hhe[?25l[30;1H[1m-- INSERT (paste) --[m[30;21H[K[15;42H[?12l[?25h[?25lheadFile[97m[101m)[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;78H[K[15;41H[?12l[?25h[?25lheadFile[97m[101m)[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;77H[K[15;40H[?12l[?25h[?25lheadFile[97m[101m)[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;76H[K[15;39H[?12l[?25h[?25lheadFile[97m[101m)[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;75H[K[15;38H[?12l[?25h[?25lheadFile[97m[101m)[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;74H[K[15;37H[?12l[?25h[?25lheadFile[97m[101m)[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;73H[K[15;36H[?12l[?25h[?25lheadFile[97m[101m)[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;72H[K[15;35H[?12l[?25hheadFile[?25l[15;32H[106m[[11C][?12l[?25h[?25l[m][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;71H[K[15;43H[106m][m [?12l[?25h[?25l[106m.[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;43H.[106m][?12l[?25h[?25le[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;44He[106m][?12l[?25h[?25ln[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;45Hn[106m][?12l[?25h[?25l[m][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;73H[K[15;45H[106m][m [?12l[?25h[?25l][106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;72H[K[15;44H[106m][m [?12l[?25h[?25l[106ml[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;44Hl[106m][?12l[?25h[?25le[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;45He[106m][?12l[?25h[?25ln[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;46Hn[106m][?12l[?25h[?25lg[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;47Hg[106m][?12l[?25h[?25lt[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;48Ht[106m][?12l[?25h[?25lh[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;49Hh[106m][?12l[?25h[?25l([m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;50H([106m][?12l[?25h[?25l)[m] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[15;51H)[106m][?12l[?25h[?25l[m[15;32H[[17C[106m()[m][?12l[?25h[?25l[?12l[?25h[?25l()[?12l[?25h[30;1H[K[15;44H[?25l[?12l[?25h[16;43H[17;33H[16;43H[?25l[16;30H[106m([11C)[?12l[?25h[?25l[m[16;30H([11C)[?12l[?25h[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"cxid.cpp" 211L, 6205C written
[?1l>[?12l[?25h[?1049lbash-4.2$ clear
[3;J[H[2Jbash-4.2$ make
checksource cxid.cpp
checksource: line length > 72 characters
cxid.cpp: 1 errors: line 51
checksource: TOTAL COMPLAINTS: 1
make: [Makefile:39: cxid.o] Error 1 (ignored)
cpplint.py.perl cxid.cpp
cxid.cpp:51:  Lines should be <= 72 characters long  [whitespace/line_length] [2]
Done processing cxid.cpp
Total errors found: 1
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxid.cpp
cxid.cpp: In function â€˜void reply_rm(accepted_socket&, cxi_header&)â€™:
cxid.cpp:51:22: warning: ISO C++ forbids variable length array â€˜rm_cmdâ€™ []8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wvla-Wvla]8;;]
   51 |    static const char rm_cmd[4+headFile.length()] = "rm " + headFile + "\0";
      |                      ^~~~~~
cxid.cpp:51:69: error: array must be initialized with a brace-enclosed initializer
   51 |    static const char rm_cmd[4+headFile.length()] = "rm " + headFile + "\0";
      |                                                    ~~~~~~~~~~~~~~~~~^~~~~~
cxid.cpp:51:22: error: storage size of â€˜rm_cmdâ€™ isnâ€™t constant
   51 |    static const char rm_cmd[4+headFile.length()] = "rm " + headFile + "\0";
      |                      ^~~~~~
make: *** [Makefile:41: cxid.o] Error 1
bash-4.2$ makeclearvim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 211L, 6205C[>c[1;1H[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   string headFile = header.filename;
[38;5;130m 51 [m   [32mstatic[m [32mconst[m [32mchar[m rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;
[38;5;130m 52 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);
[38;5;130m 53 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 54 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 55 [m      header.command = cxi_command::NAK;
[38;5;130m 56 [m      header.nbytes = htonl (errno);
[38;5;130m 57 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 58 [m      [38;5;130mreturn[m;
[38;5;130m 59 [m   }
[38;5;130m 60 [m   string rm_output;
[38;5;130m 61 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 62 [m   [38;5;130mfor[m (;;) {
[38;5;130m 63 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 64 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 65 [m      rm_output.append (buffer);
[38;5;130m 66 [m   }[15;8H[?12l[?25h[16;8H[15;8H[14;8H[1C[1C[1C[1C[1C[1C [1C[1C[1C[1C[1C [1C[1C[1C[1C r[15;27H[16;27H[15;27H[14;27H[1C[1C[1C[1C[1C [1C[1C[1C[1C[1C [1C[1C[1C[1C [1C[?25l[30;1H[1m-- INSERT (paste) --[m[30;21H[K[14;25H[?12l[?25h[?25lcha rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;79H[K[14;24H[?12l[?25h[?25l rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;78H[K[14;23H[?12l[?25h[?25l rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;77H[K[14;22H[?12l[?25h[?25lrm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;75H[K[14;20H[?12l[?25h[?25lcons rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;74H[K[14;19H[?12l[?25h[?25l rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[1C;[14;71H[K[14;16H[?12l[?25h[?25l rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;70H[K[14;15H[?12l[?25h[?25lrm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;69H[K[14;14H[?12l[?25h[?25lstati rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;68H[K[14;13H[?12l[?25h[?25l rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;67H[K[14;12H[?12l[?25h[?25l rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;66H[K[14;11H[?12l[?25h[?25l rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;65H[K[14;10H[?12l[?25h[?25l rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;64H[K[14;9H[?12l[?25h[?25lt rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;10H[?12l[?25h[?25lr rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;11H[?12l[?25h[?25li rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;12H[?12l[?25h[?25ln rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;13H[?12l[?25h[?25lg rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;14H[?12l[?25h[?25l  rm_cmd[[31m4[m+headFile.length()] = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;15H[?12l[?25h rm_cm[?25ld[106m[[19C][14;23H[?12l[?25h[?25l[m[[19C][14;24H[?12l[?25h+headFile.lengt[?25lh[106m()[?12l[?25h[?25l([?12l[?25h[?25l[14;22H[[m[17C()[106m][?12l[?25h[?25l][?12l[?25h[?25l[mi = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;22H[[19C]i[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;70H[K[14;22H[106m[[19C][?12l[?25h[?25l [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;69H[K[15;43H[97m[101m;[16;32H{[17;63H;[18;44H;[19;40H;[20;60H;[21;17H;[22;8H}[23;24H;[24;27H;[25;17H{[26;60H;[27;35H;[28;36H;[29;8H}[m[14;22H[[17C[106m()[m [?12l[?25h[?25l[106m [m= [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;68H[K[15;43H;[16;32H{[17;63H;[18;44H;[19;40H;[20;60H;[21;17H;[22;8H}[23;24H;[24;27H;[25;17H{[26;60H;[27;35H;[28;36H;[29;8H}[14;40H( [?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;67H[K[15;43H[97m[101m;[16;32H{[17;63H;[18;44H;[19;40H;[20;60H;[21;17H;[22;8H}[23;24H;[24;27H;[25;17H{[26;60H;[27;35H;[28;36H;[29;8H}[14;40H[?12l[?25h[?25l[m = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;66H[K[14;39H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;65H[K[14;38H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;64H[K[14;37H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;63H[K[14;36H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;62H[K[14;35H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;61H[K[14;34H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;60H[K[14;33H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;59H[K[14;32H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;58H[K[14;31H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[1C[97m[101m;[m[14;55H[K[14;28H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;54H[K[14;27H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;53H[K[14;26H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;52H[K[14;25H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;51H[K[14;24H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m[97m[101m;[m[14;50H[K[14;23H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;49H[K[15;43H;[16;32H{[17;63H;[18;44H;[19;40H;[20;60H;[21;17H;[22;8H}[23;24H;[24;27H;[25;17H{[26;60H;[27;35H;[28;36H;[29;8H}[14;22H[?12l[?25h[?25l = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;48H[K[14;21H[?12l[?25h[?25ld = [31m"rm "[m + headFile + [31m"[m[35m\0[m[31m"[m;[14;22H[?12l[?25h = [3C[1C[1C + headFile + [1C[1C[1C[1C;[?25li;[?12l[?25h[?25l;[14;49H[K[14;48H[?12l[?25h[?25l[31m;[m[14;48H[K[14;47H[?12l[?25h[?25l[35m;[m[14;47H[K[15;5H[31m   FILE* ls_pipe = popen (rm_cmd, [m[1Cr[1C[31m);[14;46H[?12l[?25h[?25l;[m[14;46H[K[15;5H   [32mFILE[m* ls_pipe = popen (rm_cmd, [1C[31mr[m[1C);[14;45H[?12l[?25h[?25l;[14;45H[K[14;44H[?12l[?25h[?25l;[14;44H[K[14;43H[?12l[?25h[?25l;[14;43H[K[14;42H[?12l[?25h[?25l;[14;42H[K[14;41H[?12l[?25h[30;1H[K[14;40H[?25l[?12l[?25h[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"cxid.cpp" 211L, 6167C written
[?1l>[?12l[?25h[?1049lbash-4.2$ clear
[3;J[H[2Jbash-4.2$ make
checksource cxid.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl cxid.cpp
Done processing cxid.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxid.cpp
cxid.cpp: In function â€˜void reply_rm(accepted_socket&, cxi_header&)â€™:
cxid.cpp:52:27: error: cannot convert â€˜std::stringâ€™ {aka â€˜std::basic_string<char>â€™} to â€˜const char*â€™
   52 |    FILE* ls_pipe = popen (rm_cmd, "r");
      |                           ^~~~~~
      |                           |
      |                           std::string {aka std::basic_string<char>}
In file included from /opt/rh/devtoolset-11/root/usr/include/c++/11/cstdio:42,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/ext/string_conversions.h:43,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/bits/basic_string.h:6607,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/string:55,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/bits/locale_classes.h:40,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/bits/ios_base.h:41,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/ios:42,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/ostream:38,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/iostream:39,
                 from cxid.cpp:3:
/usr/include/stdio.h:873:33: note:   initializing argument 1 of â€˜FILE* popen(const char*, const char*)â€™
  873 | extern FILE *popen (const char *__command, const char *__modes) __wur;
      |                     ~~~~~~~~~~~~^~~~~~~~~
make: *** [Makefile:41: cxid.o] Error 1
bash-4.2$ makeclearvim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 211L, 6167C[>c[1;1H[38;5;130m 37 [m   pclose (ls_pipe);
[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   string headFile = header.filename;
[38;5;130m 51 [m   string  rm_cmd = [31m"rm "[m + headFile;
[38;5;130m 52 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);
[38;5;130m 53 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 54 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 55 [m      header.command = cxi_command::NAK;
[38;5;130m 56 [m      header.nbytes = htonl (errno);
[38;5;130m 57 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 58 [m      [38;5;130mreturn[m;
[38;5;130m 59 [m   }
[38;5;130m 60 [m   string rm_output;
[38;5;130m 61 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 62 [m   [38;5;130mfor[m (;;) {
[38;5;130m 63 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 64 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 65 [m      rm_output.append (buffer);[15;8H[?12l[?25h[?25l[30;1H[1m-- INSERT (paste) --[m[30;21H[K[15;8H[?12l[?25hstring  rm_cmd = [1C[1C[1C[1C[1C + headFile;[?25l[16;8H[K[17;8H[32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);[18;8H[38;5;130mif[m (ls_pipe == [31mnullptr[m) { [18;34H[K[19;11Houtlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[20;18Hcommand = cxi_command::NAK;[21;11Hheader.nbytes = htonl (errno);[21;41H[K[22;11Hsend_packet (client_sock, &header, [38;5;130msizeof[m header);[23;8H   [38;5;130mreturn[m;[24;8H}[24;9H[K[25;8Hstring rm_output;[25;25H[K[26;8H[32mchar[m buffer[[31m0x1000[m];[27;8H[38;5;130mfor[m (;;) {[27;18H[K[28;11H[32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[29;11H[38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[29;36H[K[16;5H[?12l[?25h[30;1H[K[16;5H[?25l[?12l[?25h[17;5H[16;5H[15;5H[14;5H[13;5H[12;5H[11;5H[12;5H[13;5H[14;5H[15;5H   string  rm_cmd = [1C[1C[1C[1C[1C + [14;10H[13;10H[12;10H[11;10H[10;5H[9;5H[8;10H[7;10H[6;10H[5;10H[4;10H[3;10H[2;10H[1;10H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 36 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 35 [m      ls_output.append (buffer);[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 34 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 33 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 32 [m   [38;5;130mfor[m (;;) {[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 31 [m   [32mchar[m buffer[[31m0x1000[m];[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 30 [m   string ls_output;[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 29 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 28 [m      [38;5;130mreturn[m;[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 27 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 26 [m      header.nbytes = htonl (errno);[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 25 [m      header.command = cxi_command::NAK;[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 24 [m      outlog << ls_cmd << [31m": "[m << strerror (errno) << endl;[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 23 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 22 [m   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 21 [m   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 20 [m[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 19 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 18 [m[32mstruct[m cxi_exit: [38;5;130mpublic[m exception {};[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 17 [mlogstream outlog (cout);[1;10H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 16 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 15 [m[35m#include [m[31m"socket.h"[1;10H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 14 [m[35m#include [m[31m"protocol.h"[1;10H[?12l[?25h[2;10H[3;5H[4;10H[5;10H[6;5H[7;10H[8;10H[1C[9;8H[10;8H[11;8H[12;8H[13;8H[14;8H[15;8H[?25l[m[10;32H[106m{[16;8H}[?12l[?25h[?25l[m[10;32H{[16;8H}[17;8H[?12l[?25h[18;8H[19;8H[20;8H[21;8H[22;8H[?25l[19;17H[106m{[23;8H}[?12l[?25h[?25l[m[19;17H{[23;8H}[24;8H[?12l[?25h[25;8H[26;8H[27;8H[28;8H[29;8H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[4;70H[106m{[m[29;1H[38;5;130m 45 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[3;70H{[28;5H}
[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 48 [m   cout << header.filename;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 49 [m   exit([31m0[m);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 50 [m   string headFile = header.filename;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 51 [m   string  rm_cmd = [31m"rm "[m + headFile;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 52 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 53 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 54 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 55 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 56 [m      header.command = cxi_command::NAK;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 57 [m      header.nbytes = htonl (errno);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 58 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 59 [m      [38;5;130mreturn[m;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[23;32H[106m{[m[29;1H[38;5;130m 60 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[22;32H{[28;8H}
[38;5;130m 61 [m   string rm_output;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 62 [m   [32mchar[m buffer[[31m0x1000[m];[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 63 [m   [38;5;130mfor[m (;;) {[29;8H[?12l[?25h[28;8H[27;8H[?25l[20;32H[106m{[26;8H}[?12l[?25h[?25l[m[20;32H{[26;8H}[25;8H[?12l[?25h[24;8H[23;8H[22;8H[21;8H[20;8H[19;8H[18;5H[?25l[30;1H[1m-- INSERT (paste) --[18;5H[?12l[?25h[?25l[m [?12l[?25h[?25l [?12l[?25h[?25l [?12l[?25h[?25ls[?12l[?25h[?25lt[?12l[?25h[?25lat[?12l[?25h[?25li[?12l[?25h[?25l[32mstatic[?12l[?25h[?25l[mstatic_[?12l[?25h[?25lc[?12l[?25h[?25la[?12l[?25h[?25ls[?12l[?25h[?25l[18;8H[38;5;130mstatic_cast[?12l[?25h[?25l[m<[?12l[?25h[?25l>[?12l[?25h[?25lc>[?12l[?25h[?25lo>[?12l[?25h[?25ln>[?12l[?25h[?25ls>[?12l[?25h[?25l[32mconst[m>[?12l[?25h[?25l >[?12l[?25h[?25lc>[?12l[?25h[?25lh>[?12l[?25h[?25la>[?12l[?25h[?25l[32mchar[m>[?12l[?25h[?25l*>[?12l[?25h>[?25l([?12l[?25h[?25lr[?12l[?25h[?25lm[?12l[?25h[?25l_[?12l[?25h[?25lc[?12l[?25h[?25lm[?12l[?25h[?25ld[?12l[?25h[?25l)[18;32H[106m([mrm_cmd[106m)[?12l[?25h[?25l[m;[18;32H(rm_cmd);[?12l[?25h[30;1H[K[18;40H[?25l[?12l[?25h[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"cxid.cpp" 212L, 6204C written
[?1l>[?12l[?25h[?1049lbash-4.2$ clear
[3;J[H[2Jbash-4.2$ make
checksource cxid.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl cxid.cpp
Done processing cxid.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxid.cpp
cxid.cpp: In function â€˜void reply_rm(accepted_socket&, cxi_header&)â€™:
cxid.cpp:52:4: error: invalid â€˜static_castâ€™ from type â€˜std::stringâ€™ {aka â€˜std::basic_string<char>â€™} to type â€˜const char*â€™
   52 |    static_cast<const char*>(rm_cmd);
      |    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cxid.cpp:53:27: error: cannot convert â€˜std::stringâ€™ {aka â€˜std::basic_string<char>â€™} to â€˜const char*â€™
   53 |    FILE* ls_pipe = popen (rm_cmd, "r");
      |                           ^~~~~~
      |                           |
      |                           std::string {aka std::basic_string<char>}
In file included from /opt/rh/devtoolset-11/root/usr/include/c++/11/cstdio:42,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/ext/string_conversions.h:43,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/bits/basic_string.h:6607,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/string:55,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/bits/locale_classes.h:40,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/bits/ios_base.h:41,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/ios:42,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/ostream:38,
                 from /opt/rh/devtoolset-11/root/usr/include/c++/11/iostream:39,
                 from cxid.cpp:3:
/usr/include/stdio.h:873:33: note:   initializing argument 1 of â€˜FILE* popen(const char*, const char*)â€™
  873 | extern FILE *popen (const char *__command, const char *__modes) __wur;
      |                     ~~~~~~~~~~~~^~~~~~~~~
make: *** [Makefile:41: cxid.o] Error 1
bash-4.2$ makeclearvim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 212L, 6204C[>c[1;1H[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   string headFile = header.filename;
[38;5;130m 51 [m   string  rm_cmd = [31m"rm "[m + headFile;
[38;5;130m 52 [m   [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);
[38;5;130m 53 [m   [32mFILE[m* ls_pipe = popen (rm_cmd, [31m"r"[m);
[38;5;130m 54 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 55 [m      outlog << rm_cmd << [31m": "[m << strerror (errno) << endl;
[38;5;130m 56 [m      header.command = cxi_command::NAK;
[38;5;130m 57 [m      header.nbytes = htonl (errno);
[38;5;130m 58 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 59 [m      [38;5;130mreturn[m;
[38;5;130m 60 [m   }
[38;5;130m 61 [m   string rm_output;
[38;5;130m 62 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 63 [m   [38;5;130mfor[m (;;) {
[38;5;130m 64 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 65 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 66 [m      rm_output.append (buffer);[15;8H[?12l[?25h[?25l[30;1H[1m-- INSERT (paste) --[m[30;21H[K[15;8H[?12l[?25h[?25lrstatic_cast<[32mconst[m [32mchar[m*>(rm_cmd);[15;9H[?12l[?25h[?25lmstatic_cast<[32mconst[m [32mchar[m*>(rm_cmd);[15;10H[?12l[?25h[?25l_static_cast<[32mconst[m [32mchar[m*>(rm_cmd);[15;11H[?12l[?25h[?25lcstatic_cast<[32mconst[m [32mchar[m*>(rm_cmd);[15;12H[?12l[?25h[?25lmstatic_cast<[32mconst[m [32mchar[m*>(rm_cmd);[15;13H[?12l[?25h[?25ldstatic_cast<[32mconst[m [32mchar[m*>(rm_cmd);[15;14H[?12l[?25h[?25l [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;15H[?12l[?25h[?25l=[38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;16H[?12l[?25h[?25l [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;17H[?12l[?25h[30;1H[K[15;16H[?25l[?12l[?25h[?25l[30;1H:[?12l[?25h[?25l[30;1H[K[15;16H[?12l[?25hdd[?25l[30;1H[1m-- INSERT (paste) --[15;14H[?12l[?25h[?25l[m_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;15H[?12l[?25h[?25lcrm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;9H[?12l[?25h[?25lorm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;10H[?12l[?25h[?25lnrm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;11H[?12l[?25h[?25lsrm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;12H[?12l[?25h[?25ltrm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;13H[?12l[?25h[?25l[32mconst[m rm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;14H[?12l[?25h[?25lcrm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;15H[?12l[?25h[?25lhrm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;16H[?12l[?25h[?25larm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;17H[?12l[?25h[?25lrrm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;18H[?12l[?25h[?25l[32mchar[m*rm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[15;19H[?12l[?25h[30;1H[K[15;18H[?25l[?12l[?25h[16;18Hipe = popen[?25l [106m([11C)[16;30H[?12l[?25h[?25l[m([11C)[16;31H[?12l[?25hrm_cmd[?25l[30;1H[1m-- INSERT (paste) --[16;37H[?12l[?25h[?25l[m_, [31m"r"[m);[16;38H[?12l[?25h[30;1H[K[16;37H[?25l[?12l[?25h[17;33H[18;37H[19;37H[18;37Hd[?25l[30;1H[1m-- INSERT (paste) --[18;27H[?12l[?25h[?25l[m_ << [31m": "[m << strerror (errno) << endl;[18;28H[?12l[?25h[30;1H[K[18;27H[?25l[?12l[?25h[19;27H[20;27H[21;27H[22;17H[?25l[17;32H[106m{[23;8H}[?12l[?25h[?25l[m[17;32H{[23;8H}[24;24H[?12l[?25h[25;27H[26;17H[27;27H[28;27H[29;27H[?25l[1;29r[29;1H
[1;30r[25;17H[106m{[m[29;1H[38;5;130m 67 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[24;17H{[28;8H}
[38;5;130m 68 [m   pclose (ls_pipe);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 69 [m   header.command = cxi_command::ACK;[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 70 [m   header.nbytes = htonl (rm_output.size());[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 71 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 72 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 73 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 74 [m   send_packet (client_sock, rm_output.c_str(), rm_output.size());[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 75 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << rm_output.size() << [31m" bytes"[m);[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 76 [m}[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 77 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 78 [m[32mvoid[m run_server (accepted_socket& client_sock) {[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 79 [m   outlog.execname (outlog.execname() + [31m"*"[m);[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 80 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 81 [m   [38;5;130mtry[m {  [?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 82 [m      [38;5;130mfor[m (;;) {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 83 [m[9Ccxi_header header;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 84 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 85 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 86 [9Cswitch[m (header.command) {[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 87 [12Ccase[m cxi_command::LS:[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 88 [m[15Creply_ls (client_sock, header);[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 89 [15Cbreak[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 90 [12Ccase[m cxi_command::RM:[29;27H[?12l[?25h[28;25H[27;27H[26;27H[25;27H[24;27H[23;27H[22;27H[21;20H[20;15H[19;27H[18;27H[17;27H[16;5H[15;5H[14;27H[13;27H[12;27H[11;27H[10;27H[9;27H[8;27H[7;24H[?25l[2;17H[106m{[6;8H}[?12l[?25h[?25l[m[2;17H{[6;8H}[5;27H[?12l[?25h[4;27H[3;27H[?25l[2;17H[106m{[6;8H}[2;17H[?12l[?25h[?25l[m{[6;8H}[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 61 [m   string rm_output;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 60 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 59 [m      [38;5;130mreturn[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 58 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 57 [m      header.nbytes = htonl (errno);[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 56 [m      header.command = cxi_command::NAK;[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 55 [m      outlog << rm_cmd_ << [31m": "[m << strerror (errno) << endl;[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 54 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 53 [m   [32mFILE[m* ls_pipe = popen (rm_cmd_, [31m"r"[m);[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 52 [m   [32mconst[m [32mchar[m*rm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 51 [m   string  rm_cmd = [31m"rm "[m + headFile;[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 50 [m   string headFile = header.filename;[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 49 [m   exit([31m0[m);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 48 [m   cout << header.filename;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 45 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[1;27H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;27H[?12l[?25h[2;27H[3;27H[4;5H[5;5H[6;27H[7;27H[8;15H[9;27H[10;27H[11;27H[12;27H[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"cxid.cpp" 212L, 6227C written
[?1l>[?12l[?25h[?1049lbash-4.2$ clear
[3;J[H[2Jbash-4.2$ make
checksource cxid.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl cxid.cpp
Done processing cxid.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxid.cpp
cxid.cpp: In function â€˜void reply_rm(accepted_socket&, cxi_header&)â€™:
cxid.cpp:52:25: error: invalid â€˜static_castâ€™ from type â€˜std::stringâ€™ {aka â€˜std::basic_string<char>â€™} to type â€˜const char*â€™
   52 |    const char*rm_cmd_ = static_cast<const char*>(rm_cmd);
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
make: *** [Makefile:41: cxid.o] Error 1
bash-4.2$ makeclearvim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 212L, 6227C[>c[1;1H[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   string headFile = header.filename;
[38;5;130m 51 [m   string  rm_cmd = [31m"rm "[m + headFile;
[38;5;130m 52 [m   [32mconst[m [32mchar[m*rm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);
[38;5;130m 53 [m   [32mFILE[m* ls_pipe = popen (rm_cmd_, [31m"r"[m);
[38;5;130m 54 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 55 [m      outlog << rm_cmd_ << [31m": "[m << strerror (errno) << endl;
[38;5;130m 56 [m      header.command = cxi_command::NAK;
[38;5;130m 57 [m      header.nbytes = htonl (errno);
[38;5;130m 58 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 59 [m      [38;5;130mreturn[m;
[38;5;130m 60 [m   }
[38;5;130m 61 [m   string rm_output;
[38;5;130m 62 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 63 [m   [38;5;130mfor[m (;;) {
[38;5;130m 64 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 65 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 66 [m      rm_output.append (buffer);
[38;5;130m 67 [m   }[15;8H[?12l[?25h[?25l[30;1H[1m-- INSERT (paste) --[m[30;21H[K[15;8H[?12l[?25h[30;1H[K[15;7H[?25l[?12l[?25h [1C[1C[14;10H[1C[1C[1C [1C[1C[1C[1C*[?25l[30;1H[1m-- INSERT (paste) --[14;19H[?12l[?25h[?25l[m rm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[14;20H[?12l[?25h[30;1H[K[14;19H[?25l[?12l[?25h[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"cxid.cpp" 212L, 6228C written
[?1l>[?12l[?25h[?1049lbash-4.2$ clear
[3;J[H[2Jbash-4.2$ make
checksource cxid.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl cxid.cpp
Done processing cxid.cpp
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxid.cpp
cxid.cpp: In function â€˜void reply_rm(accepted_socket&, cxi_header&)â€™:
cxid.cpp:52:26: error: invalid â€˜static_castâ€™ from type â€˜std::stringâ€™ {aka â€˜std::basic_string<char>â€™} to type â€˜const char*â€™
   52 |    const char* rm_cmd_ = static_cast<const char*>(rm_cmd);
      |                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
make: *** [Makefile:41: cxid.o] Error 1
bash-4.2$ makeclearvim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 212L, 6228C[>c[1;1H[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   string headFile = header.filename;
[38;5;130m 51 [m   string  rm_cmd = [31m"rm "[m + headFile;
[38;5;130m 52 [m   [32mconst[m [32mchar[m* rm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);
[38;5;130m 53 [m   [32mFILE[m* ls_pipe = popen (rm_cmd_, [31m"r"[m);
[38;5;130m 54 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 55 [m      outlog << rm_cmd_ << [31m": "[m << strerror (errno) << endl;
[38;5;130m 56 [m      header.command = cxi_command::NAK;
[38;5;130m 57 [m      header.nbytes = htonl (errno);
[38;5;130m 58 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 59 [m      [38;5;130mreturn[m;
[38;5;130m 60 [m   }
[38;5;130m 61 [m   string rm_output;
[38;5;130m 62 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 63 [m   [38;5;130mfor[m (;;) {
[38;5;130m 64 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 65 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 66 [m      rm_output.append (buffer);[15;8H[?12l[?25h[16;8H[17;8H[18;8H[19;8H[20;8H[21;8H[22;8H[?25l[17;32H[106m{[23;8H}[?12l[?25h[?25l[m[17;32H{[23;8H}[24;8H[?12l[?25h[25;8H[26;8H[27;8H[28;8H[29;8H[?25l[1;29r[29;1H
[1;30r[25;17H[106m{[m[29;1H[38;5;130m 67 [m   [106m}[m[30;1H[K[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[24;17H{[28;8H}
[38;5;130m 68 [m   pclose (ls_pipe);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 69 [m   header.command = cxi_command::ACK;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 70 [m   header.nbytes = htonl (rm_output.size());[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 71 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[29;8H[?12l[?25h[28;8H[27;8H[26;8H[?25l[21;17H[106m{[25;8H}[?12l[?25h[?25l[m[21;17H{[25;8H}[24;8H[?12l[?25h[23;8H[22;8H[21;8H[20;8H[19;8H[?25l[12;32H[106m{[18;8H}[?12l[?25h[?25l[m[12;32H{[18;8H}[17;8H[?12l[?25h[?25l[12;32H[106m{[18;8H}[?12l[?25h[?25l[m[12;32H{[18;8H}[19;8H[?12l[?25h[20;8H[21;8H[20;8H[19;8H[?25l[12;32H[106m{[18;8H}[?12l[?25h[?25l[m[12;32H{[18;8H}[17;8H[?12l[?25h[16;8H[15;8H[14;8H[13;8H[12;8H[11;8H[10;8H[9;8H[10;8H[11;8H[10;8H[1C[1C[1C[1C[1C [1C[1C[1C[1C*[9;19Hcmd = [1C[1C[?25l[30;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[30;1H[K[30;1H[?1l>[?12l[?25h[?1049lbash-4.2$ vim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" 212L, 6228C[>c[1;1H[38;5;130m 37 [m   pclose (ls_pipe);
[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   string headFile = header.filename;
[38;5;130m 51 [m   string  rm_cmd = [31m"rm "[m + headFile;
[38;5;130m 52 [m   [32mconst[m [32mchar[m* rm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);
[38;5;130m 53 [m   [32mFILE[m* ls_pipe = popen (rm_cmd_, [31m"r"[m);
[38;5;130m 54 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {
[38;5;130m 55 [m      outlog << rm_cmd_ << [31m": "[m << strerror (errno) << endl;
[38;5;130m 56 [m      header.command = cxi_command::NAK;
[38;5;130m 57 [m      header.nbytes = htonl (errno);
[38;5;130m 58 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 59 [m      [38;5;130mreturn[m;
[38;5;130m 60 [m   }
[38;5;130m 61 [m   string rm_output;
[38;5;130m 62 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 63 [m   [38;5;130mfor[m (;;) {
[38;5;130m 64 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 65 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;[15;8H[?12l[?25h[16;8H[15;8H[14;8H[15;8H[16;8H[17;8H[18;8H[19;8H[20;8H[21;8H[22;8H[23;8H[?25l[18;32H[106m{[24;8H}[?12l[?25h[?25l[m[18;32H{[24;8H}[25;8H[?12l[?25h[26;8H[27;8H[28;8H[29;8H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 66 [m      rm_output.append (buffer);[30;1H[K[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[25;17H[106m{[m[29;1H[38;5;130m 67 [m   [106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[24;17H{[28;8H}
[38;5;130m 68 [m   pclose (ls_pipe);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 69 [m   header.command = cxi_command::ACK;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 70 [m   header.nbytes = htonl (rm_output.size());[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 71 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 72 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 73 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;8H[?12l[?25h[28;8H[27;8H[26;8H[25;8H[24;8H[?25l[19;17H[106m{[23;8H}[?12l[?25h[?25l[m[19;17H{[23;8H}[22;8H[?12l[?25h[21;8H[20;8H[19;8H[18;8H[17;8H[?25l[10;32H[106m{[16;8H}[?12l[?25h[?25l[m[10;32H{[16;8H}[15;8H[?12l[?25h[14;8H[13;8H[12;8H[11;8H[10;8H[9;8H[8;8H[7;8H[6;8H[7;8H[6;8H[7;8H[8;8H[9;8H[10;8H[11;8H[12;8H[13;8H[14;8H[15;8H[?25l[10;32H[106m{[16;8H}[?12l[?25h[?25l[m[10;32H{[16;8H}[17;8H[?12l[?25h[18;8H[19;8H[20;8H[21;8H[22;8H[?25l[19;17H[106m{[23;8H}[?12l[?25h[?25l[m[19;17H{[23;8H}[24;8H[?12l[?25h[25;8H[26;8H[27;8H[28;8H[29;8H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 74 [m   send_packet (client_sock, rm_output.c_str(), rm_output.size());[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 75 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << rm_output.size() << [31m" bytes"[m);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 76 [m}[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 77 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 78 [m[32mvoid[m run_server (accepted_socket& client_sock) {[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 79 [m   outlog.execname (outlog.execname() + [31m"*"[m);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 80 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 81 [m   [38;5;130mtry[m {[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 82 [m      [38;5;130mfor[m (;;) {[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 83 [m[9Ccxi_header header;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 84 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 85 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 86 [9Cswitch[m (header.command) {[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 87 [12Ccase[m cxi_command::LS:[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 88 [m[15Creply_ls (client_sock, header);[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 89 [15Cbreak[m;[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 90 [12Ccase[m cxi_command::RM:[29;8H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 91 [m[15Creply_rm (client_sock, header);[29;8H[?12l[?25h[28;8H[27;8H[26;8H[25;8H[24;8H[23;8H[22;8H[21;8H[20;8H[19;8H[18;8H[17;8H[16;8H[15;5H[14;5H[13;8H[12;8H[11;8H[10;8H[9;8H[8;8H[7;8H[6;8H[?25l[1;17H[106m{[5;8H}[?12l[?25h[?25l[m[1;17H{[5;8H}[4;8H[?12l[?25h[3;8H[2;8H[1;8H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 62 [m   [32mchar[m buffer[[31m0x1000[m];[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 61 [m   string rm_output;[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 60 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 59 [m      [38;5;130mreturn[m;[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 58 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 57 [m      header.nbytes = htonl (errno);[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 56 [m      header.command = cxi_command::NAK;[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 55 [m      outlog << rm_cmd_ << [31m": "[m << strerror (errno) << endl;[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 54 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 53 [m   [32mFILE[m* ls_pipe = popen (rm_cmd_, [31m"r"[m);[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 52 [m   [32mconst[m [32mchar[m* rm_cmd_ = [38;5;130mstatic_cast[m<[32mconst[m [32mchar[m*>(rm_cmd);[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 51 [m   string  rm_cmd = [31m"rm "[m + headFile;[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 50 [m   string headFile = header.filename;[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 49 [m   exit([31m0[m);[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 48 [m   cout << header.filename;[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[1;8H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 46 [?12l[?25h[2;8H[3;8H[4;8H[5;8H[?25l[m[30;1H[1m-- INSERT (paste) --[5;8H[?12l[?25h[?25l[m/string headFile = header.filename;[5;9H[?12l[?25h[?25l[34m/*string headFile = header.filename;[6;5H   string  rm_cmd = "rm " + headFile;[7;5H   const char* rm_cmd_ = static_cast<const char*>(rm_cmd);[8;5H   FILE* ls_pipe = popen (rm_cmd_, "r");[9;5H   if (ls_pipe == nullptr) { [10;5H      outlog << rm_cmd_ << ": " << strerror (errno) << endl;[11;5H      header.command = cxi_command::NAK;[12;5H      header.nbytes = htonl (errno);[13;5H      send_packet (client_sock, &header, sizeof header);[14;5H      return;[15;5H   }[16;5H   string rm_output;[17;5H   char buffer[0x1000];[18;5H   for (;;) {[19;5H      char* rc = fgets (buffer, sizeof buffer, ls_pipe);[20;5H      if (rc == nullptr) break;[21;5H      rm_output.append (buffer);[22;5H   }[23;5H   pclose (ls_pipe);[24;5H   header.command = cxi_command::ACK;[25;5H   header.nbytes = htonl (rm_output.size());[26;5H   memset (header.filename, 0, FILENAME_SIZE);[27;5H   DEBUGF ('h', "sending header " << header);[28;5H   send_packet (client_sock, &header, sizeof header);[29;5H   send_packet (client_sock, rm_output.c_str(), rm_output.size());[5;10H[?12l[?25h[m[30;1H[K[5;9H[?25l[?12l[?25h[6;9H[7;9H[8;9H[9;9H[10;9H[11;9H[12;9H[13;9H[14;9H[?25l[9;32H[34m[106m{[15;8H}[?12l[?25h[?25l[m[9;32H[34m{[15;8H}[16;9H[?12l[?25h[17;9H[18;9H[19;9H[20;9H[21;9H[?25l[m[18;17H[34m[106m{[22;8H}[?12l[?25h[?25l[m[18;17H[34m{[22;8H}[23;9H[?12l[?25h[24;9H[25;9H[26;9H[27;9H[28;9H[29;9H[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 75 [m[34m   DEBUGF ('h', "sent " << rm_output.size() << " bytes");[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 76 [m[34m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 77 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 78 [m[34mvoid run_server (accepted_socket& client_sock) {[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 79 [m[34m   outlog.execname (outlog.execname() + "*");[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 80 [m[34m   outlog << "connected to " << to_string (client_sock) << endl;[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 81 [m[34m   try {   [29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 82 [m[34m      for (;;) {[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 83 [m[34m         cxi_header header; [29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 84 [m[34m         recv_packet (client_sock, &header, sizeof header);[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 85 [m[34m         DEBUGF ('h', "received header " << header);[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 86 [m[34m         switch (header.command) {[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 87 [m[34m            case cxi_command::LS: [29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 88 [m[34m               reply_ls (client_sock, header);[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 89 [m[34m               break;[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 90 [m[34m            case cxi_command::RM: [29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 91 [m[34m               reply_rm (client_sock, header);[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 92 [m[34m               break;[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 93 [m[34m            default:[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 94 [m[34m               outlog << "invalid client header:" << header << endl;[29;9H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 95 [m[34m               break;[29;9H[?12l[?25h[28;9H[27;9H[26;9H[25;9H[24;9H[23;9H[22;9H[21;9H[20;9H[19;9H[18;9H[17;9H[16;9H[15;9H[14;9H[13;9H[12;9H[11;5H[10;5H[?25l[m[30;1H[1m-- INSERT (paste) --[10;5H[?12l[?25h[?25l[m[34m*}[?12l[?25h[?25l/[m}[12;5H[32mvoid[m run_server (accepted_socket& client_sock) {[13;5H   outlog.execname (outlog.execname() + [31m"*"[m);[14;5H   outlog << [31m"connected to "[m << to_string (client_sock) << endl;[15;5H   [38;5;130mtry[m {   [16;5H      [38;5;130mfor[m (;;) {[17;5H         cxi_header header; [18;5H         recv_packet (client_sock, &header, [38;5;130msizeof[m header);[19;5H         DEBUGF ([31m'h'[m, [31m"received header "[m << header);[20;5H         [38;5;130mswitch[m (header.command) {[21;5H            [38;5;130mcase[m cxi_command::LS: [22;5H               reply_ls (client_sock, header);[23;5H               [38;5;130mbreak[m;[24;5H            [38;5;130mcase[m cxi_command::RM: [25;5H               reply_rm (client_sock, header);[26;5H               [38;5;130mbreak[m;[27;5H            [38;5;130mdefault[m:[28;5H               outlog << [31m"invalid client header:"[m << header << endl;[29;5H               [38;5;130mbreak[m;[10;7H[?12l[?25h[30;1H[K[10;6H[?25l[?12l[?25h[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"cxid.cpp" 212L, 6232C written
[?1l>[?12l[?25h[?1049lbash-4.2$ clear
[3;J[H[2Jbash-4.2$ make
checksource cxid.cpp
checksource: TOTAL COMPLAINTS: 0
cpplint.py.perl cxid.cpp
cxid.cpp:51:  Could not find end of multi-line comment  [readability/multiline_comment] [5]
cxid.cpp:50:  Complex multi-line /*...*/-style comment found. Lint may give bogus warnings.  Consider replacing these with //-style comments, with #if 0...#endif, or with more clearly structured multi-line comments.  [readability/multiline_comment] [5]
Done processing cxid.cpp
Total errors found: 2
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -c cxid.cpp
cxid.cpp: In function â€˜void reply_rm(accepted_socket&, cxi_header&)â€™:
cxid.cpp:47:33: warning: unused parameter â€˜client_sockâ€™ []8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;]
   47 | void reply_rm (accepted_socket& client_sock, cxi_header& header) {
      |                ~~~~~~~~~~~~~~~~~^~~~~~~~~~~
g++ -std=gnu++2a -g -O0 -Wall -Wextra -Wpedantic -Wshadow -Wold-style-cast -fdiagnostics-color=never -o cxid cxid.o protocol.o socket.o debug.o
bash-4.2$ cd local
bash-4.2$ ls
HEADER.html  RCS  daemon.log1  localfile  localtto
bash-4.2$ ../cxid 8888
cxid(20596): unix4.lt.ucsc.edu (128.114.104.57) accepting port 8888
cxid(20596): accepted unix.lt.ucsc.edu (128.114.104.100) port 51178
cxid(20596): forked cxiserver pid 20931
cxid(20596): unix4.lt.ucsc.edu (128.114.104.57) accepting port 8888
cxid*(20931): connected to unix.lt.ucsc.edu (128.114.104.100) port 51178
^C
bash-4.2$ clear
[3;J[H[2Jbash-4.2$ clear../cxid 8888[C[C[C[C[C[C[C[C[C[Cls[Kcd local[4Pmakeclearvim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" [New File][>c[1;1H[38;5;130m  1 [m
[94m~                                                                                                                 [3;1H~                                                                                                                 [4;1H~                                                                                                                 [5;1H~                                                                                                                 [6;1H~                                                                                                                 [7;1H~                                                                                                                 [8;1H~                                                                                                                 [9;1H~                                                                                                                 [10;1H~                                                                                                                 [11;1H~                                                                                                                 [12;1H~                                                                                                                 [13;1H~                                                                                                                 [14;1H~                                                                                                                 [15;1H~                                                                                                                 [16;1H~                                                                                                                 [17;1H~                                                                                                                 [18;1H~                                                                                                                 [19;1H~                                                                                                                 [20;1H~                                                                                                                 [21;1H~                                                                                                                 [22;1H~                                                                                                                 [23;1H~                                                                                                                 [24;1H~                                                                                                                 [25;1H~                                                                                                                 [26;1H~                                                                                                                 [27;1H~                                                                                                                 [28;1H~                                                                                                                 [29;1H~                                                                                                                 [1;5H[?12l[?25h[?25l[m[30;1H[K[30;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[30;1H[K[30;1H[?1l>[?12l[?25h[?1049lbash-4.2$ vim cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"cxid.cpp" [New File][>c[1;1H[38;5;130m  1 [m
[94m~                                                                                                                 [3;1H~                                                                                                                 [4;1H~                                                                                                                 [5;1H~                                                                                                                 [6;1H~                                                                                                                 [7;1H~                                                                                                                 [8;1H~                                                                                                                 [9;1H~                                                                                                                 [10;1H~                                                                                                                 [11;1H~                                                                                                                 [12;1H~                                                                                                                 [13;1H~                                                                                                                 [14;1H~                                                                                                                 [15;1H~                                                                                                                 [16;1H~                                                                                                                 [17;1H~                                                                                                                 [18;1H~                                                                                                                 [19;1H~                                                                                                                 [20;1H~                                                                                                                 [21;1H~                                                                                                                 [22;1H~                                                                                                                 [23;1H~                                                                                                                 [24;1H~                                                                                                                 [25;1H~                                                                                                                 [26;1H~                                                                                                                 [27;1H~                                                                                                                 [28;1H~                                                                                                                 [29;1H~                                                                                                                 [1;5H[?12l[?25h[?25l[m[30;1H[K[30;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[30;1H[K[30;1H[?1l>[?12l[?25h[?1049lbash-4.2$ vim cxid.cpp[C.cxid.cpp.cxid.cpp/cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"../cxid.cpp" 212L, 6232C[>c[1;1H[38;5;130m 62 [m[34m   char buffer[0x1000];[m
[38;5;130m 63 [m[34m   for (;;) {[m
[38;5;130m 64 [m[34m      char* rc = fgets (buffer, sizeof buffer, ls_pipe);[m
[38;5;130m 65 [m[34m      if (rc == nullptr) break;[m
[38;5;130m 66 [m[34m      rm_output.append (buffer);[m
[38;5;130m 67 [m[34m   }[m
[38;5;130m 68 [m[34m   pclose (ls_pipe);[m
[38;5;130m 69 [m[34m   header.command = cxi_command::ACK;[m
[38;5;130m 70 [m[34m   header.nbytes = htonl (rm_output.size());[m
[38;5;130m 71 [m[34m   memset (header.filename, 0, FILENAME_SIZE);[m
[38;5;130m 72 [m[34m   DEBUGF ('h', "sending header " << header);[m
[38;5;130m 73 [m[34m   send_packet (client_sock, &header, sizeof header);[m
[38;5;130m 74 [m[34m   send_packet (client_sock, rm_output.c_str(), rm_output.size());[m
[38;5;130m 75 [m[34m   DEBUGF ('h', "sent " << rm_output.size() << " bytes");[m
[38;5;130m 76 [m[34m*/[m}
[38;5;130m 77 
 78 [m[32mvoid[m run_server (accepted_socket& client_sock) {
[38;5;130m 79 [m   outlog.execname (outlog.execname() + [31m"*"[m);
[38;5;130m 80 [m   outlog << [31m"connected to "[m << to_string (client_sock) << endl;
[38;5;130m 81 [m   [38;5;130mtry[m {
[38;5;130m 82 [m      [38;5;130mfor[m (;;) {
[38;5;130m 83 [m[9Ccxi_header header;
[38;5;130m 84 [m[9Crecv_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 85 [m[9CDEBUGF ([31m'h'[m, [31m"received header "[m << header);
[38;5;130m 86 [9Cswitch[m (header.command) {
[38;5;130m 87 [12Ccase[m cxi_command::LS:
[38;5;130m 88 [m[15Creply_ls (client_sock, header);
[38;5;130m 89 [15Cbreak[m;
[38;5;130m 90 [12Ccase[m cxi_command::RM:[15;5H[?12l[?25h[16;5H[15;5H[14;5H[13;5H[12;5H[11;5H[10;5H[9;5H[8;5H[7;5H[6;5H[5;5H[4;5H[3;5H[2;5H[1;5H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 61 [m[34m   string rm_output;[m[30;1H[K[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 60 [m[34m   }[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 59 [m[34m      return;[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 58 [m[34m      send_packet (client_sock, &header, sizeof header);[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 57 [m[34m      header.nbytes = htonl (errno);[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 56 [m[34m      header.command = cxi_command::NAK;[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 55 [m[34m      outlog << rm_cmd_ << ": " << strerror (errno) << endl;[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 54 [m[34m   if (ls_pipe == nullptr) { [1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 53 [m[34m   FILE* ls_pipe = popen (rm_cmd_, "r");[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 52 [m[34m   const char* rm_cmd_ = static_cast<const char*>(rm_cmd);[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 51 [m[34m   string  rm_cmd = "rm " + headFile;[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 50 [m   [34m/*string headFile = header.filename;[1;5H[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 49 [m   exit([31m0[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 48 [m   cout << header.filename;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 45 [m}[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[1;5H[?12l[?25h[2;5H[3;5H[4;5H[5;5H[?25l[30;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[30;1H[K[30;1H[?1l>[?12l[?25h[?1049lbash-4.2$ ../cxid 8888
cxid(25617): unix4.lt.ucsc.edu (128.114.104.57) accepting port 8888
cxid(25617): accepted unix.lt.ucsc.edu (128.114.104.100) port 51344
cxid(25617): forked cxiserver pid 25843
cxid(25617): unix4.lt.ucsc.edu (128.114.104.57) accepting port 8888
cxid*(25843): connected to unix.lt.ucsc.edu (128.114.104.100) port 51344
cxid(25617): listener.accept caught Interrupted system call
cxid(25617): accepted unix.lt.ucsc.edu (128.114.104.100) port 51356
cxid(25617): forked cxiserver pid 26674
cxid(25617): unix4.lt.ucsc.edu (128.114.104.57) accepting port 8888
cxid*(26674): connected to unix.lt.ucsc.edu (128.114.104.100) port 51356
cxid(25617): listener.accept caught Interrupted system call
^C
bash-4.2$ ../cxid 8888[C[C[C[C[C[C[C[C[C[Cvim ../cxid.cpp
[?1049h[?1h=[2;1Hâ–½[6n[2;1H  [1;1H]11;?[1;30r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[30;1H"../cxid.cpp" 212L, 6232C[>c[1;1H[38;5;130m 31 [m   [32mchar[m buffer[[31m0x1000[m];
[38;5;130m 32 [m   [38;5;130mfor[m (;;) {
[38;5;130m 33 [m      [32mchar[m* rc = fgets (buffer, [38;5;130msizeof[m buffer, ls_pipe);
[38;5;130m 34 [m      [38;5;130mif[m (rc == [31mnullptr[m) [38;5;130mbreak[m;
[38;5;130m 35 [m      ls_output.append (buffer);
[38;5;130m 36 [m   }
[38;5;130m 37 [m   pclose (ls_pipe);
[38;5;130m 38 [m   header.command = cxi_command::LSOUT;
[38;5;130m 39 [m   header.nbytes = htonl (ls_output.size());
[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);
[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);
[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);
[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());
[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);
[38;5;130m 45 [m}
[38;5;130m 46 
 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {
[38;5;130m 48 [m   cout << header.filename;
[38;5;130m 49 [m   exit([31m0[m);
[38;5;130m 50 [m   [34m/*string headFile = header.filename;[m
[38;5;130m 51 [m[34m   string  rm_cmd = "rm " + headFile;[m
[38;5;130m 52 [m[34m   const char* rm_cmd_ = static_cast<const char*>(rm_cmd);[m
[38;5;130m 53 [m[34m   FILE* ls_pipe = popen (rm_cmd_, "r");[m
[38;5;130m 54 [m[34m   if (ls_pipe == nullptr) { [m
[38;5;130m 55 [m[34m      outlog << rm_cmd_ << ": " << strerror (errno) << endl;[m
[38;5;130m 56 [m[34m      header.command = cxi_command::NAK;[m
[38;5;130m 57 [m[34m      header.nbytes = htonl (errno);[m
[38;5;130m 58 [m[34m      send_packet (client_sock, &header, sizeof header);[m
[38;5;130m 59 [m[34m      return;[15;5H[?12l[?25h[16;5H[15;5H[14;5H[13;5H[12;5H[11;5H[10;5H[9;5H[8;5H[7;5H[6;5H[5;5H[4;5H[3;5H[2;5H[1;5H[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 30 [m   string ls_output;[30;1H[K[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 29 [m   }[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 28 [m      [38;5;130mreturn[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 27 [m      send_packet (client_sock, &header, [38;5;130msizeof[m header);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 26 [m      header.nbytes = htonl (errno);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 25 [m      header.command = cxi_command::NAK;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 24 [m      outlog << ls_cmd << [31m": "[m << strerror (errno) << endl;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 23 [m   [38;5;130mif[m (ls_pipe == [31mnullptr[m) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 22 [m   [32mFILE[m* ls_pipe = popen (ls_cmd, [31m"r"[m);[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 21 [m   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 20 [m[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 19 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 18 [m[32mstruct[m cxi_exit: [38;5;130mpublic[m exception {};[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 17 [mlogstream outlog (cout);[1;5H[?12l[?25h[2;5H[3;5H[4;5H[5;5H[6;5H[7;5H[8;5H[9;5H[10;5H[11;5H[12;5H[13;5H[14;5H[15;5H[16;5H[17;5H[18;5H[19;5H[20;5H[21;5H[22;5H[23;5H[24;5H[25;5H[26;5H[27;5H[28;5H[?25l[4;70H[106m{[29;5H}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[3;70H{[28;5H}
[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 48 [m   cout << header.filename;[29;5H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 49 [m   exit([31m0[m);[29;5H[?12l[?25h[28;5H[27;5H[26;5H[25;5H[24;5H[23;5H[22;5H[21;5H[20;5H[19;5H[18;5H[17;5H[16;5H[15;5H[14;5H[13;5H[12;5H[11;5H[10;5H[9;5H[8;5H[7;5H[6;5H[5;5H[4;5H[3;5H[2;5H[1;5H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 20 [m[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {[1;5H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 19 [?12l[?25h
 20 [1C[1C[1C[1C[m reply_[3;16H[2;16H[3;16H[4;16H[5;16H[4;16H[3;16H[2;16H[1C rep[3;10H[4;10H[5;10H[6;10H[7;10H[8;10H[9;10H[10;10H[?25l[5;32H[106m{[11;8H}[?12l[?25h[?25l[m[5;32H{[11;8H}[12;10H[?12l[?25h[13;10H[14;10H[13;10H[12;10H[?25l[5;32H[106m{[11;8H}[?12l[?25h[?25l[m[5;32H{[11;8H}[10;10H[?12l[?25h[9;10H[8;10H[7;10H[6;10H[5;10H[4;10H[1C[1C* ls_pipe = popen[?25l [106m([11C)[4;30H[?12l[?25h[?25l[m([11C)[4;31H[?12l[?25hls_cmdmd,, [1C[?25l[106m([11C)[4;30H[?12l[?25h[?25l[m([11C)[4;29H[?12l[?25h[5;24H[6;24H[7;24H[8;24H[9;24H[8;24H[7;24H[6;24H[7;24Hd = cxi_command::NA[6;43H[7;14H[8;14H[9;14H[10;14H[?25l[5;32H[106m{[11;8H}[?12l[?25h[?25l[m[5;32H{[11;8H}[12;14H[?12l[?25h[13;14H[14;14H[15;14H[?25l[16;14H[106m([13C)[16;14H[?12l[?25h[?25l[m([13C)[17;14H[?12l[?25h[?25l[14;17H[106m{[18;8H}[?12l[?25h[?25l[m[14;17H{[18;8H}[19;14H[?12l[?25h[20;14H[21;14H[22;14H[23;14H[24;14H[25;14H[26;14H[?25l[2;70H[106m{[27;5H}[?12l[?25h[?25l[m[2;70H{[27;5H}[28;5H[?12l[?25h[29;14H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 48 [m   cout << header.filename;[29;14H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 49 [m   exit[106m([m[31m0[m[106m)[m;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[28;12H([1C)
[38;5;130m 50 [m   [34m/*string headFile = header.filename;[29;14H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 51 [m[34m   string  rm_cmd = "rm " + headFile;[29;14H[?12l[?25h[28;14H[?25l[m[27;12H[106m([1C)[?12l[?25h[?25l[m([1C)[26;14H[?12l[?25h[25;14H[24;5H[23;5H[22;14H[21;14H[20;14H[19;14H[18;14H[17;14H[16;14H[15;14H[?25l[10;17H[106m{[14;8H}[?12l[?25h[?25l[m[10;17H{[14;8H}[13;14H[?12l[?25h[?25l[12;14H[106m([13C)[12;14H[?12l[?25h[?25l[m([13C)[11;14H[?12l[?25h[10;14H[11;14H[?25l[12;14H[106m([13C)[12;14H[?12l[?25h[?25l[m([13C)[13;14H[?12l[?25h[?25l[10;17H[106m{[14;8H}[?12l[?25h[?25l[m[10;17H{[14;8H}[15;14H[?12l[?25h[16;14H[17;14H[18;14H[19;14H[18;14H[17;14H[16;14H.command = cxi_command::LSOU[17;42H[16;42H[15;24H[?25l[10;17H[106m{[14;8H}[?12l[?25h[?25l[m[10;17H{[14;8H}[13;36H[?12l[?25h[12;35H[11;42H[?25l[10;17H[106m{[14;8H}[10;17H[?12l[?25h[?25l[m{[14;8H}[9;27H[?12l[?25h[8;24H[?25l[1;32H[106m{[7;8H}[?12l[?25h[?25l[m[1;32H{[7;8H}[6;17H[?12l[?25h[5;42H[4;40H[3;42H[2;42H[1;33H[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 22 [m   [32mFILE[m* ls_pipe = popen [106m([mls_cmd, [31m"r"[m[106m)[m;[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 21 [m   [32mstatic[m [32mconst[m [32mchar[m ls_cmd[] = [31m"ls -l 2>&1"[m;[2;30H([11C)[1;42H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 20 [m[32mvoid[m reply_ls (accepted_socket& client_sock, cxi_header& header) {[1;42H[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 19 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 18 [m[32mstruct[m cxi_exit: [38;5;130mpublic[m exception {};[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 17 [mlogstream outlog (cout);[?12l[?25h[?25l[1;29r[1;1H[L[1;30r[1;1H[38;5;130m 16 [?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 15 [m[35m#include [m[31m"socket.h"[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 14 [m[35m#include [m[31m"protocol.h"[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 13 [m[35m#include [m[31m"logstream.h"[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 12 [m[35m#include [m[31m"debug.h"[?12l[?25h[?25l[1;29r[m[1;1H[L[1;30r[1;1H[38;5;130m 11 [?12l[?25h[2;22H[3;26H[4;25H[5;23H
 16 [7;28H[8;41H
 19 [10;42H[11;42H[?25l[m[12;30H[106m([11C)[?12l[?25h[?25l[m[12;30H([11C)[13;33H[?12l[?25h[14;42H[15;42H[16;40H[17;42H[18;17H[?25l[13;32H[106m{[19;8H}[?12l[?25h[?25l[m[13;32H{[19;8H}[18;17H[?12l[?25h[17;42H[16;40H[15;42H[14;42H[13;33H[?25l[12;30H[106m([11C)[?12l[?25h[?25l[m[12;30H([11C)[11;42H[?12l[?25h[?25l[106m[][?12l[?25h[?25l[?12l[?25h[?25l[m[][?12l[?25h ls_cm[?25ld[106m[][?12l[?25h[?25l[[?12l[?25h[?25l[m[][?12l[?25h = [1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[?25l[106m[][?12l[?25h[?25l[?12l[?25h[?25l[m[][?12l[?25h[12;27H[13;27H[14;27H[15;27H[16;27H[17;27H[16;27H[15;27H[14;27H[13;27H[12;27H[13;27H[14;27H[15;27H[16;27H[17;27H[18;17H[?25l[13;32H[106m{[19;8H}[?12l[?25h[?25l[m[13;32H{[19;8H}[20;24H[?12l[?25h[21;27H[?25l[22;17H[106m{[26;8H}[22;17H[?12l[?25h[?25l[m{[26;8H}[23;27H[?12l[?25h[24;27H[25;27H[?25l[22;17H[106m{[26;8H}[?12l[?25h[?25l[m[22;17H{[26;8H}[27;24H[?12l[?25h[28;27H[29;27H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 40 [m   memset (header.filename, [31m0[m, FILENAME_SIZE);[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 41 [m   DEBUGF ([31m'h'[m, [31m"sending header "[m << header);[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 42 [m   send_packet (client_sock, &header, [38;5;130msizeof[m header);[29;27H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 43 [m   send_packet (client_sock, ls_output.c_str(), ls_output.size());[29;27H[?12l[?25h[28;27H[27;27H[26;27H[25;27H[24;27H[23;24H[?25l[18;17H[106m{[22;8H}[?12l[?25h[?25l[m[18;17H{[22;8H}[21;27H[?12l[?25h[20;27H[19;27H[?25l[18;17H[106m{[22;8H}[18;17H[?12l[?25h[?25l[m{[22;8H}[17;27H[?12l[?25h[16;24H[?25l[9;32H[106m{[15;8H}[?12l[?25h[?25l[m[9;32H{[15;8H}[14;17H[?12l[?25h[13;27H[12;27H[11;27H[10;27H[9;27H[8;27H[7;27Hs_cm[?25ld[106m[][?12l[?25h[?25l[[?12l[?25h[?25l[m[][?12l[?25h = [1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[1C[?25l[106m[][?12l[?25h[?25l[?12l[?25h[?25l[m[][?12l[?25h[?25l[8;30H[106m([11C)[8;30H[?12l[?25h[?25l[m([11C)[9;11H[106m([18C)[?12l[?25h[?25l[m[9;11H([18C)[10;30H[?12l[?25h[11;30H[12;30H[13;30H[14;17H[?25l[9;32H[106m{[15;8H}[?12l[?25h[?25l[m[9;32H{[15;8H}[16;24H[?12l[?25h[17;27H[?25l[18;17H[106m{[22;8H}[18;17H[?12l[?25h[?25l[m{[22;8H}[19;30H[?12l[?25h[20;30H[21;30H[20;30H[19;30H[?25l[18;17H[106m{[22;8H}[18;17H[?12l[?25h[?25l[m{[22;8H}[17;27H[?12l[?25h[16;24H[17;27H[?25l[18;17H[106m{[22;8H}[18;17H[?12l[?25h[?25l[m{[22;8H}[19;30H[?12l[?25h[20;30H[21;30H[?25l[18;17H[106m{[22;8H}[?12l[?25h[?25l[m[18;17H{[22;8H}[23;24H[?12l[?25h[24;30H[?25l[25;30H[106m([16C)[25;30H[?12l[?25h[?25l[m([16C)[26;30H[?12l[?25h[27;30H[28;30H[29;30H[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 44 [m   DEBUGF ([31m'h'[m, [31m"sent "[m << ls_output.size() << [31m" bytes"[m);[29;30H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[4;70H[106m{[m[29;1H[38;5;130m 45 [m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[3;70H{[28;5H}
[38;5;130m 46 [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 47 [m[32mvoid[m reply_rm (accepted_socket& client_sock, cxi_header& header) {[29;30H[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 48 [m   cout << header.filename;[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 49 [m   exit([31m0[m);[?12l[?25h[?25l[1;29r[29;1H
[1;30r[29;1H[38;5;130m 50 [m   [34m/*string headFile = header.filename;[29;30H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 51 [m[34m   string  rm_cmd = "rm " + headFile;[29;30H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 52 [m[34m   const char* rm_cmd_ = static_cast<const char*>(rm_cmd);[29;30H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 53 [m[34m   FILE* ls_pipe = popen [m[34m[106m([m[34mrm_cmd_, "r"[m[34m[106m)[m[34m;[29;30H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[28;30H[34m([12C)[m
[38;5;130m 54 [m[34m   if [m[34m[106m([m[34mls_pipe == nullptr[m[34m[106m)[m[34m { [?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[28;11H[34m([18C)[m
[38;5;130m 55 [m[34m      outlog << rm_cmd_ << ": " << strerror (errno) << endl;[29;30H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 56 [m[34m      header.command = cxi_command::NAK;[29;30H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 57 [m[34m      header.nbytes = htonl (errno);[29;30H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 58 [m[34m      send_packet (client_sock, &header, sizeof header);[29;30H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 59 [m[34m      return;[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[23;32H[34m[106m{[m[29;1H[38;5;130m 60 [m[34m   [m[34m[106m}[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[22;32H[34m{[28;8H}[m
[38;5;130m 61 [m[34m   string rm_output;[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 62 [m[34m   char buffer[0x1000];[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 63 [m[34m   for (;;) {[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 64 [m[34m      char* rc = fgets (buffer, sizeof buffer, ls_pipe);[29;30H[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 65 [m[34m      if (rc == nullptr) break;[?12l[?25h[?25l[1;29r[m[29;1H
[1;30r[29;1H[38;5;130m 66 [m[34m      rm_output.append (buffer);[29;30H[?12l[?25h[28;30H[27;30H[26;17H[25;27H[24;24H[?25l[m[17;32H[34m[106m{[23;8H}[?12l[?25h[?25l[m[17;32H[34m{[23;8H}[22;17H[?12l[?25h[21;30H[20;30H[19;30H[18;30H[?25l[m[17;11H[34m[106m([18C)[?12l[?25h[?25l[16;30H([12C)[m[17;11H[34m([18C)[16;30H[?12l[?25h[?25l([12C)[15;30H[?12l[?25h[14;30H[13;30H[12;15H[11;30H[10;30H[9;5H[10;30H[11;30H[12;15H[11;30H[12;15H[?25l[30;1H[m:[?12l[?25hq[?25l[?12l[?25h[?25l[30;2H[K[30;2H[?12l[?25h [12;15H[?25l[30;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"../cxid.cpp" 212L, 6232C written
[?1l>[?12l[?25h[?1049lbash-4.2$ clear
[3;J[H[2Jbash-4.2$ clearvim ../cxid.cpp[C[C[C[C[C[C[C[C[C[C[3P../cxid 8888
cxid(19703): unix4.lt.ucsc.edu (128.114.104.57) accepting port 8888
cxid(19703): accepted unix.lt.ucsc.edu (128.114.104.100) port 51924
cxid(19703): forked cxiserver pid 20263
cxid(19703): unix4.lt.ucsc.edu (128.114.104.57) accepting port 8888
cxid*(20263): connected to unix.lt.ucsc.edu (128.114.104.100) port 51924
cxid*(20263): unix.lt.ucsc.edu (128.114.104.100) port 51924 is closed
cxid(19703): listener.accept caught Interrupted system call
exit
^C
bash-4.2$ exit
exit

Script done on Sat 05 Mar 2022 04:11:35 PM PST
